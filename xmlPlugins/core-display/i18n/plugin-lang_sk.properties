plugin.name=Zásuvný modul pre displej a vstup

adafruit.manual.name=AdaFruit_GFX s ručnou deklaráciou a konfiguráciou
adafruit.manual.desc=Vykresľovať menu pomocou knižnice AdafruitGFX. Vytvorte si grafickú premennú a sami si ju nakonfigurujte. Tu nám len povedzte názov premennej a jej typ. Táto verzia funguje s väčšinou displejov a je veľmi konfigurovateľná.

adafruit.quickstart.name=AdafruitGFX šablóna pre 5110, ST77xx a ILI9341
adafruit.quickstart.desc=Vykresľovať menu pomocou knižnice AdafruitGFX a našej šablóny pre platformy Nokia 5110, ST77xx a ILI9341. Táto verzia má rozumne predvolené mnohé konfiguračné voľby. Pre tie ďalšie použite konfigurovateľný zásuvný modul Adafruit.
adafruit.quickstart.tab=Typ štítku pre ST7735
adafruit.quickstart.tab.desc=Keď sa používajú displeje založené na ST7735, typová farba štítku zvyčajne označuje typ displeja
adafruit.quickstart.black.tab=Čierny štítok
adafruit.quickstart.green.tab=Zelený štítok
adafruit.quickstart.red.tab=Červený štítok
adafruit.quickstart.mini.tab=Mini 160x80
adafruit.quickstart.hallowing.tab=Podsvietený

adafruit.mbed.oled.name=Adafruit OLED pre mbed
adafruit.mbed.oled.desc=AdafruitGFX OLED knižnica pre mbed zariadenia. Táto verzia funguje s displejmi SSD1306 a SH1106. Môžete nastaviť väčšinu parametrov a vo vašom kóde nepotrebujete nič definovať. Ohľadom požiadaviek knižnice si pozrite dokumentáciu.
adafruit.mbed.serial.bus=I2C alebo SPI referencia
adafruit.mbed.serial.bus.desc=Názov premennej I2C alebo SPI objektu
adafruit.mbed.bus.type=Typ sériovej zbernice
adafruit.mbed.bus.type.desc=Typ sériovej zbernice. Buď I2C alebo SPI

adafruit.display.rotation=Otočenie displeja (0..3)
adafruit.display.rotation.desc=Pozrite si návod ku knižnici ohľadom informácií k rotácii

#
# dfRobot shield
#
dfrobot.uno.full=Uno (menej funkčný) alebo Úplný (8K a viac)
dfrobot.uno.full.desc=Uno (menej funkčný/menší) alebo plne funkčný zásuvný modul (rozdiel ~8K)
dfrobot.key.repeat=Rýchlosť opakovania klávesu v počte tikov (predvolené 20)
dfrobot.key.repeat.desc=Rýchlosť opakovania klávesu pre tlačidlá kódera
dfrobot.lcd.name=Vykresľovanie pre DfRobot LCD shield
dfrobot.lcd.desc=Použiť LCD panel na shielde DfRobot cez knižnicu LiquidCrystalIO bez potreby čokoľvek nastavovať.
dfrobot.keys.name=DfRobot vstup z joysticku shieldu
dfrobot.keys.desc=Použiť spínače shieldu DfRobot na ovládanie menu. Tieto spínače sú pripojené na analógový vstup A0 a budú spravované spínačmi.
dfrobot.use.right.as.sel=Použiť pravé tlačidlo na výber (uvoľniť tlačidlo pre výber)
dfrobot.use.right.as.sel.desc=Použiť pravé tlačidlo namiesto klávesu pre výber. Ten sa tak uvoľní na použitie inde.

#
# UpDown buttons
#
updown.button.name=Ovládať menu tlačidlami HORE a DOLE
updown.button.desc=Spínače, ktoré predstavujú akcie hore, dole a OK, ovládané knižnicou pre spínače. Tieto sú plne debouncované pull up alebo pull down spínače a môžu byť pripojené priamo k Arduinu alebo i2c expandéru.

#
# Custom cases
#
custom.drawable.name=Generovať Drawable pre nepodporovaný grafický displej
custom.drawable.desc=Umožní vám napísať si vlastný kód (Drawable), ktorý komunikuje s nepodporovaným displejom. Pozrite si dokumentáciu.
complete.custom.display.name=Úplne prispôsobené vykresľovanie od nuly
complete.custom.display.desc=Pokročilé použitie knižnice (pre väčšinu grafických ovládačov preferujte customDrawable). Táto voľba vám umožní napísať si vlastný kód pre vykresľovanie od nuly. Pozrite si dokumentáciu.
complete.custom.header=Názov hlavičkového súboru
complete.custom.header.desc=Súbor hlavičky potrebný pre kompiláciu
complete.custom.class.name=Názov vykresľovacej triedy vnútri hlavičky
complete.custom.class.name.desc=Názov pripravenej vykresľovacej triedy v tejto hlavičke

#
# UpDown buttons
#
updown.encoder.up.pin=Pin tlačidla Hore
updown.encoder.up.pin.desc=Pin, ku ktorému je pripojené tlačidlo HORE
updown.encoder.down.pin=Pin tlačidla Dole
updown.encoder.down.pin.desc=Pin, ku ktorému je pripojené tlačidlo DOLE
updown.encoder.left.pin=Pin tlačidla Doľava/Späť (-1 vypnuté)
updown.encoder.left.pin.desc=Pripojenie tlačidla Doľava alebo Späť, alebo -1 pre žiadne
updown.encoder.right.pin=Pin tlačidla Doprava/Ďalej (-1 vypnuté)
updown.encoder.right.pin.desc=Pripojenie tlačidla Doprava alebo Ďalej, alebo -1 pre žiadne
updown.encoder.ok.pin=Pin tlačidla OK (-1 znamená DOPRAVA je OK)
updown.encoder.ok.pin.desc=Pin, ku ktorému je pripojené OK. Keď je -1, Doprava sa stane OK

#
# LCD cases
#
lcd.char.width=Šírka Lcd
lcd.char.width.desc=Počet znakov naprieč LCD
lcd.char.height=Výška Lcd
lcd.char.height.desc=Počet riadkov na LCD
lcd.io.device=LCD IO zariadenie (štandardne prázdne)
lcd.io.device.desc=Toto vám umožňuje poskytnúť IoAbstractionRef, pokiaľ je váš displej pripojený k neštandardnému IO expandéru
lcd.backlight.pin=Voliteľný pin pre podsvietenie
lcd.backlight.pin.desc=Voliteľný pin pre podsvietenie alebo -1 pre žiadne
lcd.pwm.contrast.pin=Voliteľný pin pre PWM kontrast
lcd.pwm.contrast.pin.desc=Voliteľný pin pre kontrast alebo -1 pre žiadne. Pozrite si dokumentáciu
lcd.i2c.addr=I2C adresa
lcd.i2c.addr.desc=Adresa, na ktorej odpovedá displej
lcd.pin.layout=Rozloženie pinov LCD
lcd.pin.layout.desc=Ako sú usporiadané piny
lcd.wire.variable=Premenná I2C (Wire)
lcd.wire.variable.desc=Názov inštancie I2C, ktorá sa má použiť (štandardne Wire)

#
# SSD1306ascii
#
ssd1306ascii.name=Prispôsobiteľný modul SSD1306ASCII pre ručnú konfiguráciu
ssd1306ascii.desc=SSD1306ASCII používa greiman SSD1306Ascii z githubu na generovanie vykresľovača pre OLED zariadenia s pevnou šírkou písma, ktorý využíva málo pamäte. Upozornenie pre komerčné použitie: knižnica SSD1306Ascii je GPL
ssd1306ascii.char.width=Počet znakov horizontálne
ssd1306ascii.char.width.desc=Počet znakov naprieč displejom
ssd1306ascii.item.font=Monospace písmo pre položky
ssd1306ascii.item.font.desc=Písmo, ktoré sa použije na vykresľovanie položiek menu
ssd1306ascii.title.font=Písmo pre titul
ssd1306ascii.title.font.desc=Písmo, ktoré sa použije pre titul

#
# Frame buffer / LTDC
#
ltdc.driver.name=STM32 LTDC frame buffer (voliteľná podpora dotykov) pomocou BSP funkcií
ltdc.driver.desc=Používa BSP ovládač od ST Microelectronics ako buffer displeja LTDC a voliteľne tiež ako podporu pre BSP dotykovú obrazovku. Tento ovládač je iba pre dosky STM32 pri použití s mbed alebo Stm32Duino a vyžaduje značnú konfiguráciu.

#
# ESP32 touch sensor
#
esp32.sensor.name=Použiť touchpad senzory z ESP32 pre vstup
esp32.sensor.desc=Interaguje s touchpad senzormi z ESP32 a použije ich ako tlačidlá so spínačmi. Je podporovaný režim cez prerušenia alebo polling.
esp32.sensor.threshold=Prah pre aktiváciu spínača
esp32.sensor.threshold.desc=Bod nad/pod, kde sa spínač považuje za stlačený
esp32.sensor.threshold.mode=Režim aktivácie prahu 
esp32.sensor.threshold.mode.desc=Ak je spúšťač pod alebo nad prahovou hodnotou
esp32.sensor.low.voltage=Nízkonapäťové nastavenie
esp32.sensor.low.voltage.desc=Nízkonapäťové nastavenie pre použitie s touchpadom
esp32.sensor.high.voltage=Vysokonapäťové nastavenie
esp32.sensor.high.voltage.desc=Vysokonapäťové nastavenie pre použitie s touchpadom
esp32.sensor.attenuation=Nastavenie tlmenia
esp32.sensor.attenuation.desc=Nastavenie tlmenia pre použitie s touchpadom
esp32.sensor.up=Číslo senzora Hore
esp32.sensor.up.desc=Dotykový senzor pre HORE
esp32.sensor.down=Číslo senzora Dole
esp32.sensor.down.desc=Dotykový senzor pre DOLE
esp32.sensor.left=Číslo senzora Doľava (-1 vypnuté)
esp32.sensor.left.desc=Dotykový senzor pre DOĽAVA alebo -1 pre žiadny
esp32.sensor.right=Číslo senzora Doprava (-1 vypnuté)
esp32.sensor.right.desc=Dotykový senzor pre DOPRAVA alebo -1 pre žiadny
esp32.sensor.sel=Číslo senzora pre výber (-1 používa DOPRAVA)
esp32.sensor.sel.desc=Senzor pre výber alebo ak -1, Doprava sa použije ako výber

#
# Java cases
#
java.includes.openjfx=Moje JDK obsahuje OpenJFX
java.includes.openjfx.desc=V prípade, že vaše JDK už obsahuje knižnice OpenJFX, napríklad Liberica

#
# Touch screens
#
touch.res.xp=X+ pin
touch.res.xn=X- pin (musí byť ADC)
touch.res.yp=Y+ pin (musí byť ADC)
touch.res.yn=Y- pin
touch.res.xp.desc=Nastaviť na X+ pin
touch.res.xn.desc=Nastaviť na X- pin, musí byť ADC pin
touch.res.yp.desc=Nastaviť na Y+ pin, musí byť ADC pin
touch.res.yn.desc=Nastaviť na Y- pin
touch.res.name=Rezistívna dotyková obrazovka na analógových vstupoch
touch.res.desc=Rezistívny panel dotykovej obrazovky, ktorý je pripojený k displeju. Tento ovládač rieši priame pripojenie k analógovým pinom zariadenia a musí sa používať s grafickým vykresľovačom.
touch.lib.name=Modul pre dotykové obrazovky FT6206/XPT2046, ktorý poskytuje integráciu s knižnicou
touch.lib.desc=Moduly pre dotykové obrazovky FT6206/XPT2046, ktoré sa integrujú buď s knižnicou FT6206 od firmy Adafruit alebo XPT2046 od Paula Stoffregena. Fungujú s veľkým množstvom dotykových obrazoviek.
touch.lib.prop=Dotyková knižnica (musí byť nainštalovaná)
touch.lib.prop.desc=Dotyková knižnica, ktorá podporuje dotykové zariadenie. Knižnica musí byť nainštalovaná
touch.tft.use.raw=Použiť TFT_eSPI priamu funkciu
touch.tft.use.raw.desc=Použiť priame funkčné volanie na získanie nekalibrovanej hodnoty z knižnice TFTeSPI
touch.tft.calib.width=Maximálna šírka podporovaná dotykovou funkciou
touch.tft.calib.width.desc=Maximálna šírka, ktorá bude oznámená po zavolaní dotykových funkcií TFT_eSPI
touch.tft.calib.height=Maximálna výška oznámená dotykovou funkcou
touch.tft.calib.height.desc=Maximálna výška, ktorá bude oznámená po zavolaní dotykových funkcií TFT_eSPI

#
# U8G2 displays
#
u8g2.yield.callback=Zlepšiť latenciu I2C volaní vlastným byte callbackom
u8g2.yield.callback.desc=Nahradí byte callback, ktorý často volá yieldForMicros, a tým zlepší latenciu. Sami si musíte zavolať Wire.begin()
u8g2.enable.utf8=Zapnúť podporu pre UTF-8
u8g2.enable.utf8.desc=Keď je to zapnuté, budeme robiť volania do U8G2 pomocou UTF8 funkcií. Ak nie, použijeme obyčajný print

#
# Core values used by all entries in plugin
#
core.display.variable=Premenná displeja
core.display.variable.desc=Názov premennej displeja presne tak, ako je deklarovaná v skeči
core.display.variable.auto.desc=Názov premennej displeja, ktorá sa vytvorí
core.display.variable.type=Typ premennej displeja
core.display.variable.type.desc=Typ premennej displeja AdaGfx (šablóna ju vytvorí za vás, inak sa deklaruje v skeči)
core.display.config=Konfigurácia displeja (bežne sa nevypĺňa)
core.display.config.desc=Historické nastavenie pre tých, ktorí nezmigrovali na motívy
core.display.is.buffered=Displej je bufferovaný v pamäti (EG OLED)
core.display.is.buffered.desc=Či je knižnica displeja nabufferovaná v pamäti
core.display.width=Šírka displeja
core.display.width.desc=Šírka hardvéru v pixeloch
core.display.height=Výška displeja
core.display.height.desc=Výška hardvéru v pixeloch
core.reset.pin=Voliteľný reset pin
core.reset.pin.desc=Možnosť zadať pin, ku ktorému je pripojený Reset
core.cs.pin=CS pin (iba pre SPI)
core.cs.pin.desc=Možnosť zadať pin, ku ktorému je pripojený CS
core.rs.pin=RS/DC pin (iba pre SPI)
core.rs.pin.desc=Možnosť zadať pin, ku ktorému je pripojený RS/DC
core.option.data.pin=Dátový pin (iba pre SW SPI/I2C)
core.option.data.pin.desc=Voliteľne špecifikuje dátový pin pre SW SPI/I2C
core.option.clock.pin=Pin s hodinovými impulzmi (iba pre SW SPI/I2C)
core.option.clock.pin.desc=Voliteľne špecifikuje pin s hodinovými impulzmi pre SW SPI/I2C
core.screen.updates.sec=Aktualizácií obrazovky za sekundu
core.screen.updates.sec.desc=Počet aktualizácií obrazovky za sekundu. Uistite sa, že je deliteľný 1000
core.display.buffer.size=Koľko riadkov bufferovať (zvýšenie výkonu) (zhruba 40-80 bajtov na riadok)
core.display.buffer.size.desc=Väčší výkon a menej blikania. Vykresľuje položky do pamäťového zásobníka a potom voliteľne zapíše výsledok na TFT (tiež zvané Sprite height)
core.input.polling=Režim pollingu / prerušenia
core.input.polling.desc=Vyberte, či budú spínače používať polling / prerušenia
core.input.polling.all=Polling pre klávesy a kodéry
core.input.polling.none=Všetko je riadené prerušeniami
core.input.polling.keys=Klávesy používajú polling, pin kodéru A prerušenie
core.switch.io.device=IoAbstractionRef pre spínače
core.switch.io.device.desc=Toto vám umožní poskytnúť IoAbstractionRef, pokiaľ máte vstup na IO expandéri
core.key.repeat.speed=Rýchlosť opakovania klávesov v počet tikov (štandardne 20)
core.key.repeat.speed.desc=Rýchlosť opakovania klávesov pre tlačidlá kodéra
core.pullup.logic=PullUp logika
core.pullup.logic.desc=Toto zapnite, aby sa použila pull up logika. Inak sa použije pull down
core.no.display=Nevyžaduje sa žiadny displej
core.no.display.desc=Toto použite vtedy, ak chcete použiť vlastnú technológiu displeja alebo vo vašom zariadení nie je žiadny displej.
core.no.input=Nevyžaduje sa žiadny vstup
core.no.input.desc=Túto možnosť použite vtedy, ak nemáte žiadne lokálne vstupy alebo je vstup kombinovaný s modulom displeja.
core.touch.separator=Voliteľné nastavenia dotykov
core.touch.separator.desc=Voliteľné nastavenia pre dotykový ovládač poskytnutý knižnicou
core.touch.required=Vyžaduje sa dotyková obrazovka
core.touch.required.desc=Nastavte na true, aby ste zapli podporu pre dotykové obrazovky
core.touch.orientation=Orientácia dotykov
core.touch.orientation.desc=Voliteľné nastavenia orientácie dotykov
core.touch.swap.xy=Orientácia spínača z X,Y do Y,X
core.touch.swap.xy.desc=V prípade potreby zamení orientáciu dotykovej obrazovky z X,Y na Y,X
core.touch.x.inverted=Invertovať hodnoty v nespracovanom rozmere X
core.touch.x.inverted.desc=Invertuje nespracovanú rovinu X na dotykovej obrazovke (pred aplikovaním orientácie)
core.touch.y.inverted=Invertovať hodnoty v nespracovanom rozmere Y
core.touch.y.inverted.desc=Invertuje nespracovanú rovinu Y na dotykovej obrazovke (pred aplikovaním orientácie)
core.touch.calibration=Voliteľná kalibrácia dotykov
core.touch.calibration.desc=Voliteľné nastavenia dotykov
core.enable.touch.calib=Povoliť kalibráciu dotykov
core.enable.touch.calib.desc=Povoliť internú kalibráciu dotykov, vrátane kalibrácie UI
core.touch.calib.addr=Umiestnenie v EEPROM pre uloženie kalibrácie
core.touch.calib.addr.desc=Umiestnenie v EEPROM, kde sa začnú ukladať dáta kalibrácie
