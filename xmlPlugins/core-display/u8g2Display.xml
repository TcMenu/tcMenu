<TcMenuPlugin name="Custom U8G2 - manually declared and configured"
              id="8646497b-1427-415f-8020-1260a1fef57d"
              subsystem="DISPLAY"
              requiresDesigner="2.0" needsTheme="true"
              xmlns="https://www.thecoderscorner.com/libraries/tcmenuPluginItem"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="https://www.thecoderscorner.com/libraries/tcmenuPluginItem https://www.thecoderscorner.com/libraries/tcmenu-plugin-item.xsd">
    <SupportedPlatforms>
        <Platform>ARDUINO_UNO</Platform>
        <Platform>ARDUINO_AVR</Platform>
        <Platform>ARDUINO_32</Platform>
        <Platform>ARDUINO_ESP8266</Platform>
        <Platform>ARDUINO_ESP32</Platform>
        <Platform>STM32DUINO</Platform>
    </SupportedPlatforms>
    <Description>Draw menus using U8G2 library. Use this version when you want to provide a ready configured U8G2 variable yourself, instead of letting the code generator provide it. This version is more configurable.</Description>
    <Documentation link="https://www.thecoderscorner.com/products/arduino-libraries/tc-menu/tcmenu-plugins/u8g2-renderer-plugin/"/>
    <RequiredLibraries/>
    <ImageFile>oled-display.jpg</ImageFile>

    <Properties>
        <Property id="DISPLAY_VARIABLE" name="Display variable name" initial="gfx" desc="Display variable name as declared in sketch" type="variable" />
        <Property id="DISPLAY_TYPE" name="Display variable type" initial="U8G2_SSD1306_128X64_NONAME_F_SW_I2C" desc="Type of the variable as declared in sketch" type="variable" />
        <Property id="DISPLAY_CONFIG" name="Deprecated Optional display config" initial="" desc="Deprecated, do not use in new designs, leave blank)" type="variable" />
        <Property id="UPDATES_PER_SEC" name="Screen updates per second" initial="10" desc="How many times per second to check for screen updates" type="int" min="1" max="30" />
        <Property id="YIELDING_WIRE_CB" name="Improve latency of I2C calls with custom byte callback" initial="false" type="boolean"
                  whenProperty="DISPLAY_TYPE" matches=".*HW_I2C"
                  desc="Overrides byte callback calling yieldForMicros frequently to improve latency, you must call Wire.begin() yourself" />
        <Property id="USE_UTF8_SUPPORT" name="Turn on support for UTF-8" initial="false" type="boolean"
                  desc="When true we'll call into U8G2 using UTF8 functions, otherwise we'll use regular print"/>
    </Properties>

    <ApplicabilityDefs/>

    <SourceFiles>
        <Replacement find="define TC_USE_UTF_8_ENCODING (true|false)" replace="define TC_USE_UTF_8_ENCODING true" whenProperty="USE_UTF8_SUPPORT" isValue="true"/>
        <Replacement find="define TC_USE_UTF_8_ENCODING (true|false)" replace="define TC_USE_UTF_8_ENCODING false" whenProperty="USE_UTF8_SUPPORT" isValue="false"/>
        <Replacement find="define WANT_TASK_MANAGER_FRIENDLY_YIELD [01]" replace="define WANT_TASK_MANAGER_FRIENDLY_YIELD 1" whenProperty="YIELDING_WIRE_CB" isValue="true"/>
        <Replacement find="define WANT_TASK_MANAGER_FRIENDLY_YIELD [01]" replace="define WANT_TASK_MANAGER_FRIENDLY_YIELD 0" whenProperty="YIELDING_WIRE_CB" isValue="false"/>
        <SourceFile name="u8g2Driver/tcMenuU8g2.cpp" />
        <SourceFile name="u8g2Driver/tcMenuU8g2.h" />
    </SourceFiles>

    <IncludeFiles>
        <Header name="tcMenuU8g2.h" inSource="true"/>
    </IncludeFiles>

    <GlobalVariables>
        <Variable name="${DISPLAY_VARIABLE}" type="${DISPLAY_TYPE}" export="only" />

        <Variable name="${DISPLAY_CONFIG}" type="U8g2GfxMenuConfig" export="only" whenProperty="DISPLAY_CONFIG" isNotValue=""/>

        <Variable name="${DISPLAY_VARIABLE}Drawable" type="U8g2Drawable" whenProperty="YIELDING_WIRE_CB" isValue="true">
            <Param ref="${DISPLAY_VARIABLE}"/>
            <Param ref="Wire"/>
        </Variable>

        <Variable name="${DISPLAY_VARIABLE}Drawable" type="U8g2Drawable" whenProperty="YIELDING_WIRE_CB" isValue="false">
            <Param ref="${DISPLAY_VARIABLE}"/>
        </Variable>

        <Variable name="renderer" type="GraphicsDeviceRenderer" export="true">
            <Param value="30"/>
            <Param value="applicationInfo.name"/>
            <Param ref="${DISPLAY_VARIABLE}Drawable"/>
        </Variable>
    </GlobalVariables>

    <SetupFunctions>

        <Function name="setGraphicsConfiguration" object="renderer" whenProperty="DISPLAY_CONFIG" isNotValue="">
            <Param ref="${DISPLAY_VARIABLE}"/>
            <Param ref="${DISPLAY_CONFIG}"/>
        </Function>

        <Function object="renderer" name="setUpdatesPerSecond">
            <Param value="${UPDATES_PER_SEC}"/>
        </Function>
    </SetupFunctions>
</TcMenuPlugin>