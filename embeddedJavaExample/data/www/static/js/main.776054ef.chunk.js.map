{"version":3,"sources":["api/protocol/TagValEnums.ts","img/large_icon.png","api/MenuItem.ts","api/protocol/MenuCommands.ts","api/protocol/TagValProtocol.ts","api/MenuTree.ts","api/MenuController.ts","api/MenuItemFormatter.ts","img/pairingExample.jpg","PairingPanel.tsx","MenuUI.tsx","api/remote/WebSocketConnector.ts","GlobalSettings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TVMenuFields","HeartbeatMode","BootstrapMode","ChangeType","ButtonType","DialogMode","ApiPlatform","AckStatus","MenuCommandType","JOIN","PAIRING_REQUEST","HEARTBEAT","BOOTSTRAP","ANALOG_BOOT_ITEM","ACTION_BOOT_ITEM","SUBMENU_BOOT_ITEM","ENUM_BOOT_ITEM","BOOLEAN_BOOT_ITEM","TEXT_BOOT_ITEM","RUNTIME_LIST_BOOT","BOOT_SCROLL_CHOICE","BOOT_RGB_COLOR","LARGE_NUM_BOOT_ITEM","FLOAT_BOOT_ITEM","REMOTE_BOOT_ITEM","ACKNOWLEDGEMENT","CHANGE_INT_FIELD","DIALOG_UPDATE","BooleanNaming","MenuItem","initialValue","messageType","itemName","menuId","readOnly","visible","changed","currentValue","this","markChanged","newName","newId","newVal","AnalogMenuItem","id","maxValue","divisor","offset","unitName","setMenuId","maxVal","newDivisor","newOffs","EnumMenuItem","itemList","newList","ListMenuItem","numberOfItems","items","TextEditMode","BooleanMenuItem","naming","TRUE_FALSE","FloatMenuItem","decimalPlaces","decPlaces","ActionMenuItem","SubMenuItem","name","children","setItemName","setReadOnly","setVisible","clearChanged","item","push","EditableLargeNumberMenuItem","digitsAllowed","negativeAllowed","allowed","places","neg","Rgb32MenuItem","alphaChannelOn","on","ScrollChoice","pos","text","currentPos","val","data","split","length","parseInt","ScrollChoiceMenuItem","numberOfEntries","entries","EditableTextMenuItem","editMode","PLAIN_TEXT","textLength","len","mode","MenuCommand","commandType","_commandType","HeartbeatCommand","frequency","hbMode","_frequency","_mode","BootstrapCommand","bootstrapMode","_bootstrapMode","AcknowledgmentCommand","status","correlation","_status","_correlation","DialogUpdateCommand","header","buffer","button1","button2","_header","_buffer","_button1","_button2","JoinCommand","uuid","platform","version","_name","_uuid","_platform","_version","ItemChangeCommand","value","_menuId","_value","PairingCommand","appName","appUuid","_appName","_appUuid","MenuItemUpdateCommand","parId","_item","_parentId","OutgoingMenuCommandHandler","expectedMsgType","msgHandler","cmd","TcProtocolError","message","Error","stack","UNEXPECTED_EOM","KEY_NOT_DEF","MSG_TOO_SMALL","TagValProtocolParser","keyToValueMap","parseData","position","dataToParse","foundEnd","charCodeAt","key","readString","ch","charAt","ret","getValue","def","TagValProtocolHandler","tree","parsedKeyVal","incomingTagValMsgProcessors","outgoingTagValMsgProcessors","initialiseProtocol","msgKey","handler","parser","getValueAsIntWithDefault","HB_FREQUENCY_FIELD","getValueAsInt","HB_MODE_FIELD","KEY_BOOT_TYPE_FIELD","START","STOP","KEY_ACK_STATUS","KEY_CORRELATION_FIELD","KEY_MODE_FIELD","SHOW","HIDE","ACTION","getValueWithDefault","KEY_HEADER_FIELD","KEY_BUFFER_FIELD","KEY_BUTTON1_FIELD","KEY_BUTTON2_FIELD","KEY_NAME_FIELD","KEY_UUID_FIELD","KEY_PLATFORM_ID","parseFloat","KEY_VER_FIELD","p","ty","KEY_CHANGE_TYPE","currentVal","ABSOLUTE_LIST","listItemHasUpdated","KEY_NO_OF_CHOICES","KEY_CURRENT_VAL","KEY_ID_FIELD","incomingChangeMessage","processSubMenuItem","processAnalogItem","processBooleanItem","processActionItem","processRgbItem","processFloatItem","processEnumItem","processLargeNumItem","processListItem","processScrollChoiceItem","processTextItem","buildHeartbeat","buildJoin","buildPairing","buildDialogAction","buildUpdate","tagValStr","msgType","substr","restOfMsg","startParseData","processor","menuCommand","applyMsg","mt","String","fromCharCode","joinCmd","startMessage","asTagVal","toString","pairingCmd","changeCmd","chg","toFixed","l","i","character","KEY_PREPEND_NAMECHOICE","KEY_PREPEND_CHOICE","dlgCmd","hb","createMenuItemFn","subId","KEY_PARENT_ID_FIELD","myId","getMenuItemFor","addMenuItem","KEY_VISIBLE_FIELD","KEY_READONLY_FIELD","processMenuItem","setAlphaChannelOn","KEY_ALPHA_FIELD","rgb","setCurrentValue","setOffset","KEY_ANALOG_OFFSET_FIELD","setDivisor","KEY_ANALOG_DIVISOR_FIELD","setMaxValue","KEY_ANALOG_MAX_FIELD","setUnitName","KEY_ANALOG_UNIT_FIELD","setNaming","KEY_BOOLEAN_NAMING","current","setDecimalPlaces","KEY_FLOAT_DECIMAL_PLACES","setNumberOfEntries","fromString","setTextLength","KEY_MAX_LENGTH","setEditMode","KEY_EDIT_TYPE","setNegativeAllowed","KEY_NEGATIVE_ALLOWED","setDigitsAllowed","enumItems","noOfItems","setItemList","list","Array","ControllerState","MenuTree","treeStructChangeFn","allItemMap","rootElement","treeStructureChanged","subMenuId","menuItem","getMenuId","sub","addChildItem","clearAll","staticCorCount","makeCorrelation","Math","floor","random","MenuController","connector","appInfo","menuTree","protocolHandler","componentsById","lastHeartbeatRx","lastHeartbeatTx","hbFrequency","currentConnection","appVersion","appPlatform","JS_API","dialogListener","currentState","STOPPED","stateListener","undefined","pairingMode","customMessageHandler","rebuildTree","Date","now","m","console","warn","getName","state","FAILED_AUTHENTICATION","isRunning","registerMessageHandler","proto","msg","messageProcessor","setCurrentState","NOT_CONNECTED","registerConnectionListener","connected","why","CONNECTED","sendMessage","convertCommandToWire","getAppName","getAppUuid","rawVersion","process","regex","match","parseAppVersion","emptyTree","checkHeartbeats","tickAllElements","start","cb","startTime","PAIRED_OK","delay","stop","closeConnection","isConnected","dt","Object","values","forEach","comp","tick","setTimeout","bind","error","NORMAL","lastDisconnectTime","cleanComponents","info","rootId","getRoot","rootComponent","READY","structureHasChanged","itemId","getCurrentValue","ABSOLUTE","e","amt","button","sp","asString","DELTA","possibleMsg","convertWireToCommand","joinReceived","itemHasUpdated","heartbeatReceived","pairingRequest","dialogHasUpdated","bootstrapEvent","acknowledgement","log","pair","dlg","join","evt","gotStart","debug","ack","ackReceived","SUCCESS","rawMessage","cleanMsg","charNum","toPrintableMessage","customHandler","listener","ms","Promise","resolve","formatStringToWire","num","round","getDivisor","getOffset","getMaxValue","getItemList","isTrue","flt","isNegativeAllowed","getDecimalPlaces","et","getEditMode","getTextLength","IP_ADDRESS","TIME_24H","TIME_24_HUNDREDS","TIME_12H","GREGORIAN_DATE","formatEditableTextWire","formatForDisplay","an","calcVal","whole","fractMax","getActualDecimalDivisor","fraction","abs","padStart","calculateRequiredDigits","getUnitName","formatAnalogItem","curr","getNaming","YES_NO","ON_OFF","formatBooleanItem","PairingMode","MenuUIState","PairingPanel","props","buttonText","NOT_STARTED","pairingButtonClicked","a","controller","attemptPairing","update","setState","STARTED","DONE","window","location","reload","src","pairingImg","className","alt","onClick","Component","CurrentSocketState","BaseMenuUI","lastUpdate","itemState","outstandingCorrelation","bindAllControls","updateItem","getTree","putMenuComponent","RECENT_UPDATE","internalUpdateItem","correlationId","ackStatus","UPDATE_ERROR","forceUpdate","timeNow","ticks","PENDING_UPDATE","baseClass","getMenuName","getItemName","isReadOnly","SubMenuUI","renderableChildren","isExpanded","getChildren","toggleExpand","listItems","map","RootSubMenuUI","registerStateListener","UpDownEditorUI","sendDecrease","sendIncrease","sendDeltaUpdate","markRecentlyUpdated","calculatedClass","disabled","TextBasedMenuUI","editingMode","rollbackValue","startEditing","cancelPressed","submitPressed","textHasChanged","sendAbsoluteUpdate","alert","event","currentTarget","type","onChange","ListMenuItemUI","ActionableTextMenuItem","buttonPressed","extraTxt","sendActionableUpdate","Rgb32ColorEditor","editingStarted","editingRequested","colorHasChanged","colStyle","backgroundColor","style","WebSocketConnector","url","connectionListener","messageHandler","socket","DISCONNECTED","lastDisconnect","currentData","CONNECTING","WebSocket","onclose","reason","code","onopen","ev","onmessage","possibleMessage","getPossibleMessage","protocol","msgStart","retVal","substring","close","readyState","OPEN","send","GlobalAppSettings","uuidv4","webSocketExtension","doesCookieExist","getCookieOrDefault","setCookie","wsExtension","GlobalSettingsPanel","appNameHasChanged","appUuidHasChanged","webSocketHasChanged","formSubmitPrevention","settings","setAppName","setAppUuid","setWebSocketExtension","preventDefault","onSubmit","htmlFor","getWebSocketExtension","expires","setTime","getTime","document","cookie","toUTCString","nameLenPlus","c","trim","filter","decodeURIComponent","App","settingsActive","settingsButtonWasPressed","hasStartedYet","customUrl","globalSettings","globalSocket","host","globalController","err","st","logo","DialogItemUI","registerDialogListener","shown","title","content","btn1","btn2","button1Clicked","button2Clicked","btn","ACCEPT","CANCEL","OK","CLOSE","sendDialogAction","dialogClasses","textFromBtnType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.776054ef.chunk.js","sourcesContent":["export enum TVMenuFields {\r\n    KEY_NAME_FIELD = \"NM\",\r\n    KEY_UUID_FIELD = \"UU\",\r\n    KEY_VER_FIELD = \"VE\",\r\n    HB_FREQUENCY_FIELD = \"HI\",\r\n    HB_MODE_FIELD = \"HR\",\r\n    KEY_PLATFORM_ID = \"PF\",\r\n    KEY_BOOT_TYPE_FIELD = \"BT\",\r\n    KEY_ID_FIELD = \"ID\",\r\n    KEY_CORRELATION_FIELD = \"IC\",\r\n    KEY_EEPROM_FIELD = \"IE\",\r\n    KEY_READONLY_FIELD = \"RO\",\r\n    KEY_VISIBLE_FIELD = \"VI\",\r\n    KEY_ALPHA_FIELD = \"RA\",\r\n    KEY_WIDTH_FIELD = \"WI\",\r\n    KEY_PARENT_ID_FIELD = \"PI\",\r\n    KEY_ANALOG_MAX_FIELD = \"AM\",\r\n    KEY_ANALOG_OFFSET_FIELD = \"AO\",\r\n    KEY_ANALOG_DIVISOR_FIELD = \"AD\",\r\n    KEY_ANALOG_UNIT_FIELD = \"AU\",\r\n    KEY_FLOAT_DECIMAL_PLACES = \"FD\",\r\n    KEY_NEGATIVE_ALLOWED = \"NA\",\r\n    KEY_REMOTE_NUM = \"RN\",\r\n    KEY_CURRENT_VAL = \"VC\",\r\n    KEY_BOOLEAN_NAMING = \"BN\",\r\n    KEY_NO_OF_CHOICES = \"NC\",\r\n    KEY_MAX_LENGTH = \"ML\",\r\n    KEY_EDIT_TYPE = \"EM\",\r\n    KEY_PREPEND_CHOICE = \"C\", // second char from A onwards.\r\n    KEY_PREPEND_NAMECHOICE = \"c\", // second char from A onwards.\r\n    KEY_CHANGE_TYPE = \"TC\",\r\n    KEY_ACK_STATUS = \"ST\",\r\n    KEY_MODE_FIELD = \"MO\",\r\n    KEY_BUFFER_FIELD = \"BU\",\r\n    KEY_HEADER_FIELD = \"HF\",\r\n    KEY_BUTTON1_FIELD = \"B1\",\r\n    KEY_BUTTON2_FIELD = \"B2\"\r\n}\r\n\r\nexport class MenuCommandType {\r\n    public static JOIN = \"NJ\";\r\n    public static PAIRING_REQUEST = \"PR\";\r\n    public static HEARTBEAT = \"HB\";\r\n    public static BOOTSTRAP = \"BS\";\r\n    public static ANALOG_BOOT_ITEM = \"BA\";\r\n    public static ACTION_BOOT_ITEM = \"BC\";\r\n    public static SUBMENU_BOOT_ITEM = \"BM\";\r\n    public static ENUM_BOOT_ITEM = \"BE\";\r\n    public static BOOLEAN_BOOT_ITEM = \"BB\";\r\n    public static TEXT_BOOT_ITEM = \"BT\";\r\n    public static RUNTIME_LIST_BOOT = \"BL\";\r\n    public static BOOT_SCROLL_CHOICE = \"BZ\";\r\n    public static BOOT_RGB_COLOR = \"BK\";\r\n    public static LARGE_NUM_BOOT_ITEM = \"BN\";\r\n    public static FLOAT_BOOT_ITEM = \"BF\";\r\n    public static REMOTE_BOOT_ITEM = \"BR\";\r\n    public static ACKNOWLEDGEMENT = \"AK\";\r\n    public static CHANGE_INT_FIELD = \"VC\";\r\n    public static DIALOG_UPDATE = \"DM\"\r\n}\r\n\r\nexport enum HeartbeatMode {\r\n    NORMAL, START, END\r\n}\r\n\r\nexport enum BootstrapMode {\r\n    START, STOP\r\n}\r\n\r\nexport enum ChangeType {\r\n    DELTA = 0, ABSOLUTE = 1, ABSOLUTE_LIST = 2, LIST_SELECTION = 3\r\n}\r\n\r\nexport enum ButtonType {\r\n    OK, ACCEPT, CANCEL, CLOSE, NONE\r\n}\r\n\r\nexport enum DialogMode {\r\n    SHOW= 'S', HIDE = 'H', ACTION = 'A'\r\n}\r\n\r\nexport enum ApiPlatform {\r\n    ARDUINO, ARDUINO_32, JAVA_API,DNET_API,JS_API\r\n}\r\n\r\nexport enum AckStatus {\r\n    VALUE_OUT_OF_RANGE = -1, SUCCESS = 0, ID_NOT_FOUND = 1, INVALID_CREDENTIALS = 2, UNSPECIFIED_ERROR = 10000\r\n}\r\n\r\nexport function isAckStatusError(ack: AckStatus) {\r\n    return ack > 0;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/large_icon.c9d72f60.png\";","export class MenuItem<V> {\r\n    messageType: string = 'Undefined';\r\n    private itemName: string = \"\";\r\n    private menuId: string = \"\";\r\n    private readOnly: boolean = false;\r\n    private visible: boolean = false;\r\n    private changed: boolean = false;\r\n    private currentValue: V;\r\n\r\n    constructor(initialValue: V) {\r\n        this.currentValue = initialValue;\r\n    }\r\n\r\n    public isReadOnly(): boolean {\r\n        return this.readOnly;\r\n    }\r\n\r\n    public setReadOnly(readOnly: boolean) {\r\n        this.readOnly = readOnly;\r\n        this.markChanged();\r\n    }\r\n\r\n    public isVisible(): boolean {\r\n        return this.visible;\r\n    }\r\n\r\n    public setVisible(visible: boolean) {\r\n        this.visible = visible;\r\n        this.markChanged();\r\n    }\r\n\r\n    public getItemName(): string {\r\n        return this.itemName;\r\n    }\r\n\r\n    public setItemName(newName: string) {\r\n        this.itemName = newName;\r\n        this.markChanged();\r\n    }\r\n\r\n    public getMenuId(): string {\r\n        return this.menuId;\r\n    }\r\n\r\n    public setMenuId(newId: string) {\r\n        this.menuId = newId;\r\n        this.markChanged();\r\n    }\r\n\r\n    public markChanged() {\r\n        this.changed = true;\r\n    }\r\n\r\n    public clearChanged() {\r\n        this.changed = false;\r\n    }\r\n\r\n    public isChanged(): boolean {\r\n        return this.changed;\r\n    }\r\n\r\n    public getCurrentValue(): V {\r\n        return this.currentValue;\r\n    }\r\n\r\n    public setCurrentValue(newVal: V) {\r\n        this.currentValue = newVal;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class AnalogMenuItem extends MenuItem<number> {\r\n    messageType: string = 'Analog';\r\n    private maxValue: number = 0;\r\n    private divisor: number = 0;\r\n    private offset: number = 0;\r\n    private unitName: string = \"\";\r\n\r\n    public constructor(id: string) {\r\n        super(0);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    public getMaxValue(): number {\r\n        return this.maxValue;\r\n    }\r\n\r\n    public setMaxValue(maxVal: number) {\r\n        this.maxValue = maxVal;\r\n        this.markChanged();\r\n    }\r\n\r\n    public getDivisor(): number {\r\n        return this.divisor;\r\n    }\r\n\r\n    public setDivisor(newDivisor: number) {\r\n        this.divisor = newDivisor;\r\n        this.markChanged();\r\n    }\r\n\r\n    public getOffset(): number {\r\n        return this.offset;\r\n    }\r\n\r\n    public setOffset(newOffs: number) {\r\n        this.offset = newOffs;\r\n        this.markChanged();\r\n    }\r\n\r\n    public getUnitName(): string {\r\n        return this.unitName;\r\n    }\r\n\r\n    public setUnitName(unitName: string) {\r\n        this.unitName = unitName;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class EnumMenuItem extends MenuItem<number> {\r\n    messageType: string = 'Enum';\r\n    private itemList: Array<string> = [];\r\n\r\n    public constructor(id: string) {\r\n        super(0);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    public getItemList(): Array<string> {\r\n        return this.itemList;\r\n    }\r\n\r\n    public setItemList(newList: Array<string>) {\r\n        this.itemList = newList;\r\n        this.markChanged();\r\n    }\r\n}\r\nexport class ListMenuItem extends MenuItem<Array<string>> {\r\n    messageType: string = 'List'\r\n    numberOfItems: number = 0;\r\n\r\n    public constructor(id: string) {\r\n        super([]);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    setNumberOfItems(items: number): void {\r\n        this.numberOfItems = items;\r\n        this.markChanged();\r\n    }\r\n\r\n    getNumberOfItems(): number {\r\n        return this.numberOfItems;\r\n    }\r\n}\r\n\r\nexport enum BooleanNaming { TRUE_FALSE, ON_OFF, YES_NO}\r\n\r\nexport class BooleanMenuItem extends MenuItem<boolean> {\r\n    messageType: string = 'Boolean';\r\n    private naming: BooleanNaming = BooleanNaming.TRUE_FALSE;\r\n\r\n    public constructor(id: string) {\r\n        super(false);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    public getNaming(): BooleanNaming {\r\n        return this.naming;\r\n    }\r\n\r\n    public setNaming(naming: BooleanNaming) {\r\n        this.naming = naming;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class FloatMenuItem extends MenuItem<number> {\r\n    messageType: string = 'Float';\r\n    private decimalPlaces: number = 1;\r\n\r\n    public constructor(id: string) {\r\n        super(0.0);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    public getDecimalPlaces(): number {\r\n        return this.decimalPlaces;\r\n    }\r\n\r\n    public setDecimalPlaces(decPlaces: number) {\r\n        this.decimalPlaces = decPlaces;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class ActionMenuItem extends MenuItem<boolean> {\r\n    messageType: string = \"Action\";\r\n\r\n    public constructor(id: string) {\r\n        super(false);\r\n        this.setMenuId(id);\r\n    }\r\n}\r\n\r\nexport class SubMenuItem extends MenuItem<boolean> {\r\n    messageType: string = 'Sub';\r\n    private children: Array<MenuItem<any>> = [];\r\n\r\n    public constructor(name: string, id: string) {\r\n        super(false);\r\n        this.setItemName(name);\r\n        this.setMenuId(id);\r\n        this.setReadOnly(false);\r\n        this.setVisible(true);\r\n        this.clearChanged();\r\n    }\r\n\r\n\r\n    public getChildren(): Array<MenuItem<any>> {\r\n        return this.children;\r\n    }\r\n\r\n    public addChildItem(item: MenuItem<any>) {\r\n        this.children.push(item);\r\n        this.markChanged();\r\n    }\r\n\r\n    clearAll() {\r\n        this.children = [];\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class EditableLargeNumberMenuItem extends MenuItem<number> {\r\n    public messageType: string = \"LargeNum\";\r\n    private digitsAllowed: number = 8;\r\n    private decimalPlaces: number = 3;\r\n    private negativeAllowed: boolean = false;\r\n\r\n    constructor(id: string) {\r\n        super(0.0);\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    getDigitsAllowed(): number {\r\n        return this.digitsAllowed;\r\n    }\r\n\r\n    setDigitsAllowed(allowed: number): void {\r\n        this.digitsAllowed = allowed;\r\n        this.markChanged();\r\n    }\r\n\r\n    getDecimalPlaces(): number {\r\n        return this.decimalPlaces;\r\n    }\r\n\r\n    setDecimalPlaces(places: number): void {\r\n        this.decimalPlaces = places;\r\n        this.markChanged();\r\n    }\r\n\r\n    isNegativeAllowed(): boolean {\r\n        return this.negativeAllowed;\r\n    }\r\n\r\n    setNegativeAllowed(neg: boolean): void {\r\n        this.negativeAllowed = neg;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class Rgb32MenuItem extends MenuItem<string> {\r\n    public messageType: string = \"Rgb32\";\r\n    private alphaChannelOn: boolean = false;\r\n\r\n    constructor(id: string) {\r\n        super(\"#ffffff\");\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    isAlphaChannelOn(): boolean {\r\n        return this.alphaChannelOn;\r\n    }\r\n\r\n    setAlphaChannelOn(on: boolean) {\r\n        this.alphaChannelOn = on;\r\n        this.markChanged();\r\n    }\r\n}\r\n\r\nexport class ScrollChoice {\r\n    public currentPos: number = 0;\r\n    public currentValue: string = \"\";\r\n\r\n    constructor(pos: number, text: string) {\r\n        this.currentPos = pos;\r\n        this.currentValue = text;\r\n    }\r\n\r\n    static fromString(val: string): ScrollChoice {\r\n        let data = val?.split(\":\");\r\n        if(data?.length === 2) {\r\n            return new ScrollChoice(parseInt(data[0]), data[1]);\r\n        } else {\r\n            return new ScrollChoice(0, \"\");\r\n        }\r\n    }\r\n\r\n    asString(): string {\r\n        return this.currentPos + \"-\" + this.currentValue;\r\n    }\r\n}\r\n\r\nexport class ScrollChoiceMenuItem extends MenuItem<ScrollChoice> {\r\n    public messageType: string = \"Scroll\";\r\n    private numberOfEntries: number = 0;\r\n\r\n    constructor(id: string) {\r\n        super(new ScrollChoice(0, \"\"));\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    setNumberOfEntries(entries: number) {\r\n        this.numberOfEntries = entries;\r\n        this.markChanged();\r\n    }\r\n\r\n    getNumberOfEntries(): number {\r\n        return this.numberOfEntries;\r\n    }\r\n}\r\n\r\nexport enum TextEditMode {\r\n    PLAIN_TEXT, IP_ADDRESS, TIME_24H, TIME_12H, TIME_24_HUNDREDS, GREGORIAN_DATE,\r\n    TIME_DURATION_SECONDS, TIME_DURATION_HUNDREDS, TIME_24H_HHMM, TIME_12H_HHMM\r\n}\r\n\r\nexport class EditableTextMenuItem extends MenuItem<string> {\r\n    public messageType: string = \"Text\";\r\n    private editMode: TextEditMode = TextEditMode.PLAIN_TEXT;\r\n    private textLength: number = 10;\r\n\r\n    constructor(id: string) {\r\n        super(\"\");\r\n        this.setMenuId(id);\r\n    }\r\n\r\n    getTextLength(): number {\r\n        return this.textLength;\r\n    }\r\n\r\n    setTextLength(len: number): void {\r\n        this.textLength = len;\r\n        this.markChanged();\r\n    }\r\n\r\n    getEditMode(): TextEditMode {\r\n        return this.editMode;\r\n    }\r\n\r\n    setEditMode(mode: TextEditMode): void {\r\n        this.editMode = mode;\r\n        this.markChanged();\r\n    }\r\n}","import {\r\n    AckStatus, ApiPlatform,\r\n    BootstrapMode,\r\n    ButtonType,\r\n    ChangeType,\r\n    DialogMode,\r\n    HeartbeatMode,\r\n    MenuCommandType\r\n} from \"./TagValEnums\";\r\nimport {MenuItem} from \"../MenuItem\";\r\n\r\nexport class MenuCommand {\r\n    private readonly _commandType: string;\r\n\r\n    constructor(commandType: string) {\r\n        this._commandType = commandType;\r\n    }\r\n\r\n    get commandType(): string {\r\n        return this._commandType;\r\n    }\r\n}\r\n\r\nexport class HeartbeatCommand extends MenuCommand {\r\n    private readonly _frequency: number;\r\n    private readonly _mode: HeartbeatMode;\r\n\r\n    constructor(frequency: number, hbMode: HeartbeatMode) {\r\n        super(MenuCommandType.HEARTBEAT);\r\n        this._frequency = frequency;\r\n        this._mode = hbMode;\r\n    }\r\n\r\n    get frequency(): number {\r\n        return this._frequency;\r\n    }\r\n\r\n    get mode(): HeartbeatMode {\r\n        return this._mode;\r\n    }\r\n}\r\n\r\nexport class BootstrapCommand extends MenuCommand {\r\n    private readonly _bootstrapMode: BootstrapMode;\r\n\r\n    constructor(bootstrapMode: BootstrapMode) {\r\n        super(MenuCommandType.BOOTSTRAP);\r\n        this._bootstrapMode = bootstrapMode;\r\n    }\r\n\r\n    get bootstrapMode(): BootstrapMode {\r\n        return this._bootstrapMode;\r\n    }\r\n}\r\n\r\nexport class AcknowledgmentCommand extends MenuCommand {\r\n    private readonly _status: AckStatus;\r\n    private readonly _correlation: string;\r\n\r\n    constructor(status: AckStatus, correlation: string) {\r\n        super(MenuCommandType.ACKNOWLEDGEMENT);\r\n        this._status = status;\r\n        this._correlation = correlation;\r\n    }\r\n\r\n    get status(): AckStatus {\r\n        return this._status;\r\n    }\r\n\r\n    get correlation(): string {\r\n        return this._correlation;\r\n    }\r\n}\r\n\r\nexport class DialogUpdateCommand extends MenuCommand {\r\n    private readonly _mode: DialogMode;\r\n    private readonly _header: string;\r\n    private readonly _buffer: string;\r\n    private readonly _button1: ButtonType;\r\n    private readonly _button2: ButtonType;\r\n    private _correlation: string;\r\n\r\n    constructor(mode: DialogMode, header: string, buffer: string, button1: ButtonType, button2: ButtonType, correlation: string) {\r\n        super(MenuCommandType.DIALOG_UPDATE);\r\n        this._mode = mode;\r\n        this._header = header;\r\n        this._buffer = buffer;\r\n        this._button1 = button1;\r\n        this._button2 = button2;\r\n        this._correlation = correlation;\r\n    }\r\n\r\n    get mode(): DialogMode {\r\n        return this._mode;\r\n    }\r\n\r\n    get correlation(): string {\r\n        return this._correlation;\r\n    }\r\n\r\n    get header(): string {\r\n        return this._header;\r\n    }\r\n\r\n    get buffer(): string {\r\n        return this._buffer;\r\n    }\r\n\r\n    get button1(): ButtonType {\r\n        return this._button1;\r\n    }\r\n\r\n    get button2(): ButtonType {\r\n        return this._button2;\r\n    }\r\n}\r\n\r\nexport class JoinCommand extends MenuCommand {\r\n    private readonly _name: string;\r\n    private readonly _uuid: string;\r\n    private readonly _platform: ApiPlatform;\r\n    private readonly _version: number;\r\n\r\n    constructor(name: string, uuid: string, platform: ApiPlatform, version: number) {\r\n        super(MenuCommandType.JOIN);\r\n        this._name = name;\r\n        this._uuid = uuid;\r\n        this._platform = platform;\r\n        this._version = version;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get uuid(): string {\r\n        return this._uuid;\r\n    }\r\n\r\n    get platform(): ApiPlatform {\r\n        return this._platform;\r\n    }\r\n\r\n    get version(): number {\r\n        return this._version;\r\n    }\r\n}\r\n\r\nexport class ItemChangeCommand extends MenuCommand {\r\n    private readonly _menuId: string;\r\n    private readonly _mode: ChangeType;\r\n    private readonly _value: string|string[]\r\n    private readonly _correlation: string\r\n\r\n    constructor(menuId: string, mode: ChangeType, value: string | string[], correlation: string) {\r\n        super(MenuCommandType.CHANGE_INT_FIELD);\r\n        this._menuId = menuId;\r\n        this._mode = mode;\r\n        this._value = value;\r\n        this._correlation = correlation;\r\n    }\r\n\r\n    get menuId(): string {\r\n        return this._menuId;\r\n    }\r\n\r\n    get mode(): ChangeType {\r\n        return this._mode;\r\n    }\r\n\r\n    get value(): string | string[] {\r\n        return this._value;\r\n    }\r\n\r\n    get correlation(): string {\r\n        return this._correlation;\r\n    }\r\n}\r\n\r\nexport class PairingCommand extends MenuCommand {\r\n    private readonly _appName: string;\r\n    private readonly _appUuid: string;\r\n\r\n\r\n    constructor(appName: string, appUuid: string) {\r\n        super(MenuCommandType.PAIRING_REQUEST);\r\n        this._appName = appName;\r\n        this._appUuid = appUuid;\r\n    }\r\n\r\n    get appName(): string {\r\n        return this._appName;\r\n    }\r\n\r\n    get appUuid(): string {\r\n        return this._appUuid;\r\n    }\r\n}\r\n\r\nexport class MenuItemUpdateCommand<T> extends MenuCommand {\r\n    private readonly _item: MenuItem<T>;\r\n    private readonly _parentId: string;\r\n    private readonly _value: T;\r\n\r\n    constructor(commandType: string, item: MenuItem<T>, parId: string, value: T) {\r\n        super(commandType);\r\n        this._item = item;\r\n        this._parentId = parId;\r\n        this._value = value;\r\n    }\r\n\r\n\r\n    get item(): MenuItem<T> {\r\n        return this._item;\r\n    }\r\n\r\n    get parentId(): string {\r\n        return this._parentId;\r\n    }\r\n\r\n    get value(): T {\r\n        return this._value;\r\n    }\r\n}\r\n","import {\r\n    ActionMenuItem,\r\n    AnalogMenuItem,\r\n    BooleanMenuItem,\r\n    EditableLargeNumberMenuItem,\r\n    EditableTextMenuItem,\r\n    EnumMenuItem,\r\n    FloatMenuItem,\r\n    ListMenuItem,\r\n    MenuItem,\r\n    Rgb32MenuItem,\r\n    ScrollChoice,\r\n    ScrollChoiceMenuItem,\r\n    SubMenuItem\r\n} from \"../MenuItem\";\r\nimport {BootstrapMode, ChangeType, DialogMode, MenuCommandType, TVMenuFields} from \"./TagValEnums\";\r\nimport {\r\n    AcknowledgmentCommand,\r\n    BootstrapCommand,\r\n    DialogUpdateCommand,\r\n    HeartbeatCommand,\r\n    ItemChangeCommand,\r\n    JoinCommand,\r\n    MenuCommand,\r\n    MenuItemUpdateCommand,\r\n    PairingCommand\r\n} from \"./MenuCommands\";\r\nimport {MenuTree} from \"../MenuTree\";\r\n\r\nexport const PROTOCOL_TAG_VAL = 0x01;\r\nexport const TAG_START_OF_MSG = 0x01;\r\nexport const TAG_END_OF_MSG = 0x02;\r\nconst TAG_FIELD_TERMINATOR = '|';\r\n\r\ntype MenuCtorFunction<V extends MenuItem<any>> = (parser: TagValProtocolParser, id: string) => V;\r\n\r\nclass OutgoingMenuCommandHandler<T extends MenuCommand> {\r\n    private readonly expectedMsgType: string;\r\n    private readonly msgHandler: (cmd: T) => string;\r\n\r\n    constructor(expectedMsgType: string, msgHandler: (cmd: T) => string) {\r\n        this.expectedMsgType = expectedMsgType;\r\n        this.msgHandler = msgHandler;\r\n    }\r\n\r\n    applyMsg(cmd: MenuCommand): string {\r\n        if(cmd.commandType === this.expectedMsgType) {\r\n            return this.msgHandler(cmd as T);\r\n        } else {\r\n            throw new TcProtocolError(\"Unexpected message type \" + cmd.commandType + \" when expecting \" + this.expectedMsgType);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface TcProtocolHandler {\r\n    addIncomingTagValHandler(msgKey: string, handler: (parser: TagValProtocolParser) => MenuCommand): void;\r\n    addOutgoingTagValHandler(msgKey: string, handler: OutgoingMenuCommandHandler<any>): void;\r\n    convertWireToCommand(tagValStr: string): MenuCommand | undefined;\r\n    convertCommandToWire(menuCommand: MenuCommand): string;\r\n\r\n}\r\n\r\nexport class TcProtocolError extends Error {\r\n    public static UNEXPECTED_EOM: string = \"Unexpected End Of Message\";\r\n    public static KEY_NOT_DEF: string = \"Key not defined: \";\r\n    public static MSG_TOO_SMALL: string = \"Message too small: \";\r\n\r\n    constructor(public message: string) {\r\n        super(message);\r\n        this.name = \"TcProtocolError\";\r\n        ({stack: this.stack} = (new Error() as any));\r\n    }\r\n\r\n}\r\n\r\nexport class TagValProtocolParser {\r\n    private keyToValueMap: { [id:string]: string } = {};\r\n    private parseData: string = \"\";\r\n    private position: number = 0;\r\n\r\n    public startParseData(dataToParse: string) {\r\n        this.position = 0;\r\n        this.keyToValueMap = {};\r\n        this.parseData = dataToParse;\r\n        let foundEnd = false;\r\n        while (this.position < this.parseData.length && !foundEnd) {\r\n            if (this.parseData.charCodeAt(this.position) === TAG_END_OF_MSG) {\r\n                break;\r\n            }\r\n\r\n            let key = this.readString();\r\n            if (!key) {\r\n                throw new TcProtocolError(TcProtocolError.UNEXPECTED_EOM);\r\n            } else {\r\n                let val = this.readString();\r\n                if (!val && val.charCodeAt(0) === TAG_END_OF_MSG) {\r\n                    foundEnd = true;\r\n                }\r\n                this.keyToValueMap[key] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    readString(): string {\r\n        let value = \"\";\r\n        while (this.position < this.parseData.length) {\r\n            let ch = this.parseData.charAt(this.position++);\r\n            if (ch === '\\\\') {\r\n                // special escape case allows anything to be sent\r\n                ch = this.parseData.charAt(this.position++);\r\n                value += ch;\r\n            } else if (ch === '=' || ch === TAG_FIELD_TERMINATOR) {\r\n                // end of current token\r\n                return value;\r\n            } else {\r\n                // within current token\r\n                value += ch;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    getValue(key: string): string {\r\n        const ret = this.keyToValueMap[key];\r\n        if (!ret) throw new TcProtocolError(TcProtocolError.KEY_NOT_DEF + key);\r\n        return ret;\r\n    }\r\n\r\n    getValueAsInt(key: string): number {\r\n        return parseInt(this.getValue(key));\r\n    }\r\n\r\n    getValueWithDefault(key: string, def: string): string {\r\n        const ret = this.keyToValueMap[key];\r\n        return ret ?? def;\r\n    }\r\n\r\n    getValueAsIntWithDefault(key: string, def: number): number {\r\n        const ret = this.keyToValueMap[key];\r\n        return (ret) ? parseInt(ret) : def;\r\n    }\r\n}\r\n\r\nexport class TagValProtocolHandler implements TcProtocolHandler {\r\n    private readonly parsedKeyVal: TagValProtocolParser;\r\n    private readonly tree: MenuTree;\r\n    private readonly incomingTagValMsgProcessors: {[key: string]: (parser: TagValProtocolParser) => MenuCommand} = {}\r\n    private readonly outgoingTagValMsgProcessors: {[key: string]: OutgoingMenuCommandHandler<any>} = {}\r\n\r\n    public constructor(tree: MenuTree) {\r\n        this.parsedKeyVal = new TagValProtocolParser();\r\n        this.tree = tree;\r\n        this.initialiseProtocol();\r\n    }\r\n\r\n    public addIncomingTagValHandler(msgKey: string, handler: (parser: TagValProtocolParser) => MenuCommand): void {\r\n        this.incomingTagValMsgProcessors[msgKey] = handler;\r\n    }\r\n\r\n    public addOutgoingTagValHandler(msgKey: string, handler: OutgoingMenuCommandHandler<any>): void {\r\n        this.outgoingTagValMsgProcessors[msgKey] = handler;\r\n    }\r\n\r\n    private initialiseProtocol() {\r\n        this.incomingTagValMsgProcessors[MenuCommandType.HEARTBEAT] = (parser) => new HeartbeatCommand(\r\n                    parser.getValueAsIntWithDefault(TVMenuFields.HB_FREQUENCY_FIELD, 1500),\r\n                    parser.getValueAsInt(TVMenuFields.HB_MODE_FIELD)\r\n        );\r\n\r\n        this.incomingTagValMsgProcessors[MenuCommandType.BOOTSTRAP] = (parser) => new BootstrapCommand(\r\n            parser.getValue(TVMenuFields.KEY_BOOT_TYPE_FIELD) === \"START\" ? BootstrapMode.START : BootstrapMode.STOP);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.ACKNOWLEDGEMENT] = (parser) => new AcknowledgmentCommand(\r\n                    parser.getValueAsInt(TVMenuFields.KEY_ACK_STATUS),\r\n                    parser.getValue(TVMenuFields.KEY_CORRELATION_FIELD)\r\n        );\r\n\r\n        this.incomingTagValMsgProcessors[MenuCommandType.DIALOG_UPDATE] = parser => new DialogUpdateCommand(\r\n                    fromTextToDlgMode(parser.getValue(TVMenuFields.KEY_MODE_FIELD)),\r\n                    parser.getValueWithDefault(TVMenuFields.KEY_HEADER_FIELD, \"\"),\r\n                    parser.getValueWithDefault(TVMenuFields.KEY_BUFFER_FIELD, \"\"),\r\n                    parser.getValueAsIntWithDefault(TVMenuFields.KEY_BUTTON1_FIELD, 0),\r\n                    parser.getValueAsIntWithDefault(TVMenuFields.KEY_BUTTON2_FIELD, 0),\r\n                    parser.getValueWithDefault(TVMenuFields.KEY_CORRELATION_FIELD, \"0\")\r\n        );\r\n        this.incomingTagValMsgProcessors[MenuCommandType.JOIN] = parser => new JoinCommand(\r\n                    parser.getValue(TVMenuFields.KEY_NAME_FIELD),\r\n                    parser.getValue(TVMenuFields.KEY_UUID_FIELD),\r\n                    parser.getValueAsIntWithDefault(TVMenuFields.KEY_PLATFORM_ID, 0),\r\n                    parseFloat(parser.getValue(TVMenuFields.KEY_VER_FIELD)) / 100.0\r\n        );\r\n\r\n        this.incomingTagValMsgProcessors[MenuCommandType.CHANGE_INT_FIELD] = parser => incomingChangeMessage(parser);\r\n\r\n        this.incomingTagValMsgProcessors[MenuCommandType.PAIRING_REQUEST] = parser => new PairingCommand(\r\n            parser.getValue(TVMenuFields.KEY_NAME_FIELD),\r\n            parser.getValue(TVMenuFields.KEY_UUID_FIELD)\r\n        );\r\n\r\n        this.incomingTagValMsgProcessors[MenuCommandType.SUBMENU_BOOT_ITEM] = parser => this.processSubMenuItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.ANALOG_BOOT_ITEM] = parser => this.processAnalogItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.BOOLEAN_BOOT_ITEM] = parser => this.processBooleanItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.ACTION_BOOT_ITEM] = parser => this.processActionItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.BOOT_RGB_COLOR] = parser => this.processRgbItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.FLOAT_BOOT_ITEM] = parser => this.processFloatItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.ENUM_BOOT_ITEM] = parser => this.processEnumItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.LARGE_NUM_BOOT_ITEM] = parser => this.processLargeNumItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.RUNTIME_LIST_BOOT] = parser => this.processListItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.BOOT_SCROLL_CHOICE] = parser => this.processScrollChoiceItem(parser);\r\n        this.incomingTagValMsgProcessors[MenuCommandType.TEXT_BOOT_ITEM] = parser => this.processTextItem(parser);\r\n\r\n        this.outgoingTagValMsgProcessors[MenuCommandType.HEARTBEAT] = new OutgoingMenuCommandHandler<HeartbeatCommand>(MenuCommandType.HEARTBEAT,\r\n            (cmd) => this.buildHeartbeat(cmd));\r\n        this.outgoingTagValMsgProcessors[MenuCommandType.JOIN] = new OutgoingMenuCommandHandler<JoinCommand>(MenuCommandType.JOIN,\r\n            (cmd) => this.buildJoin(cmd));\r\n        this.outgoingTagValMsgProcessors[MenuCommandType.PAIRING_REQUEST] = new OutgoingMenuCommandHandler<PairingCommand>(MenuCommandType.PAIRING_REQUEST,\r\n            (cmd) => this.buildPairing(cmd));\r\n        this.outgoingTagValMsgProcessors[MenuCommandType.DIALOG_UPDATE] = new OutgoingMenuCommandHandler<DialogUpdateCommand>(MenuCommandType.HEARTBEAT,\r\n            (cmd) => this.buildDialogAction(cmd));\r\n        this.outgoingTagValMsgProcessors[MenuCommandType.CHANGE_INT_FIELD] = new OutgoingMenuCommandHandler<ItemChangeCommand>(MenuCommandType.CHANGE_INT_FIELD,\r\n            (cmd) => this.buildUpdate(cmd));\r\n    }\r\n\r\n\r\n    public convertWireToCommand(tagValStr: string): MenuCommand | undefined {\r\n        if (tagValStr.length < 3) throw new TcProtocolError(TcProtocolError.MSG_TOO_SMALL + tagValStr);\r\n        let msgType = tagValStr.substr(0, 2);\r\n        let restOfMsg = tagValStr.substr(2);\r\n        let parser = this.parsedKeyVal;\r\n        parser.startParseData(restOfMsg);\r\n        let processor = this.incomingTagValMsgProcessors[msgType];\r\n        if(!processor) return undefined;\r\n        return processor(parser);\r\n    }\r\n\r\n    public convertCommandToWire(menuCommand: MenuCommand): string {\r\n        if(!menuCommand) throw new TcProtocolError(\"Unexpected null message\");\r\n        const processor = this.outgoingTagValMsgProcessors[menuCommand.commandType];\r\n        return processor?.applyMsg(menuCommand);\r\n    }\r\n\r\n    asTagVal(key: string, val: string): string {\r\n        return key + \"=\" + val + TAG_FIELD_TERMINATOR;\r\n    }\r\n\r\n    startMessage(mt: string) {\r\n        return String.fromCharCode(TAG_START_OF_MSG) + String.fromCharCode(PROTOCOL_TAG_VAL) + mt;\r\n    }\r\n\r\n    buildJoin(joinCmd: JoinCommand) {\r\n        return this.startMessage(MenuCommandType.JOIN) +\r\n            this.asTagVal(TVMenuFields.KEY_NAME_FIELD, joinCmd.name) +\r\n            this.asTagVal(TVMenuFields.KEY_UUID_FIELD, joinCmd.uuid) +\r\n            this.asTagVal(TVMenuFields.KEY_VER_FIELD, String(joinCmd.version)) +\r\n            this.asTagVal(TVMenuFields.KEY_PLATFORM_ID, joinCmd.platform.toString(10)) +\r\n            String.fromCharCode(TAG_END_OF_MSG);\r\n    }\r\n\r\n    buildPairing(pairingCmd: PairingCommand) {\r\n        return this.startMessage(MenuCommandType.PAIRING_REQUEST) +\r\n            this.asTagVal(TVMenuFields.KEY_NAME_FIELD, pairingCmd.appName) +\r\n            this.asTagVal(TVMenuFields.KEY_UUID_FIELD, pairingCmd.appUuid) +\r\n            String.fromCharCode(TAG_END_OF_MSG);\r\n\r\n    }\r\n\r\n    buildUpdate(changeCmd: ItemChangeCommand) {\r\n        let chg = this.startMessage(MenuCommandType.CHANGE_INT_FIELD) +\r\n            this.asTagVal(TVMenuFields.KEY_CHANGE_TYPE, changeCmd.mode.toFixed(0)) +\r\n            this.asTagVal(TVMenuFields.KEY_ID_FIELD, changeCmd.menuId) +\r\n            this.asTagVal(TVMenuFields.KEY_CORRELATION_FIELD, changeCmd.correlation);\r\n            if(changeCmd.mode === ChangeType.ABSOLUTE_LIST) {\r\n                let l = changeCmd.value as Array<string>;\r\n                this.asTagVal(TVMenuFields.KEY_NO_OF_CHOICES, l.length.toString(10));\r\n                for(let i=0; i<l.length; i++) {\r\n                    let character = String.fromCharCode(65 + i)\r\n                    chg += this.asTagVal(TVMenuFields.KEY_PREPEND_NAMECHOICE + character, \"\");\r\n                    chg += this.asTagVal(TVMenuFields.KEY_PREPEND_CHOICE + character, l[i]);\r\n                }\r\n            } else {\r\n                chg += this.asTagVal(TVMenuFields.KEY_CURRENT_VAL, changeCmd.value.toString());\r\n            }\r\n            chg += String.fromCharCode(TAG_END_OF_MSG);\r\n            return chg;\r\n    }\r\n\r\n    buildDialogAction(dlgCmd: DialogUpdateCommand) {\r\n        return this.startMessage(MenuCommandType.DIALOG_UPDATE) +\r\n            this.asTagVal(TVMenuFields.KEY_MODE_FIELD, dlgCmd.mode) +\r\n            this.asTagVal(TVMenuFields.KEY_HEADER_FIELD, dlgCmd.header) +\r\n            this.asTagVal(TVMenuFields.KEY_BUFFER_FIELD, dlgCmd.buffer) +\r\n            this.asTagVal(TVMenuFields.KEY_BUTTON1_FIELD, dlgCmd.button1.toFixed(0)) +\r\n            this.asTagVal(TVMenuFields.KEY_BUTTON2_FIELD, dlgCmd.button2.toFixed(0)) +\r\n            String.fromCharCode(TAG_END_OF_MSG);\r\n    }\r\n\r\n    buildHeartbeat(hb: HeartbeatCommand) {\r\n        return this.startMessage(MenuCommandType.HEARTBEAT) +\r\n            this.asTagVal(TVMenuFields.HB_MODE_FIELD, hb.mode.toString(10)) +\r\n            this.asTagVal(TVMenuFields.HB_FREQUENCY_FIELD, hb.frequency.toString(10)) +\r\n            String.fromCharCode(TAG_END_OF_MSG);\r\n    }\r\n\r\n    private processMenuItem<V extends MenuItem<any>>(createMenuItemFn: MenuCtorFunction<V>): V {\r\n        let parser = this.parsedKeyVal;\r\n        let subId = parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD);\r\n        let myId = parser.getValue(TVMenuFields.KEY_ID_FIELD);\r\n        let item = this.tree.getMenuItemFor(myId) as V;\r\n        if(!item) {\r\n            item = createMenuItemFn(parser, myId);\r\n            this.tree.addMenuItem(subId, item);\r\n        }\r\n        item.setVisible(parser.getValueAsInt(TVMenuFields.KEY_VISIBLE_FIELD) !== 0);\r\n        item.setReadOnly(parser.getValueAsInt(TVMenuFields.KEY_READONLY_FIELD) !== 0);\r\n        item.setItemName(parser.getValue(TVMenuFields.KEY_NAME_FIELD))\r\n        return item;\r\n    }\r\n\r\n    private processSubMenuItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item = this.processMenuItem((parser, id) => new SubMenuItem(parser.getValue(TVMenuFields.KEY_NAME_FIELD), id));\r\n        return new MenuItemUpdateCommand(MenuCommandType.SUBMENU_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), false)\r\n    }\r\n\r\n    private processActionItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item = this.processMenuItem((parser, id) => new ActionMenuItem(id));\r\n        return new MenuItemUpdateCommand(MenuCommandType.ACTION_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), false)\r\n    }\r\n\r\n    private processRgbItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item = this.processMenuItem((parser, id) => new Rgb32MenuItem(id));\r\n        item.setAlphaChannelOn(parser.getValueAsInt(TVMenuFields.KEY_ALPHA_FIELD)!==0);\r\n        const rgb = parser.getValueWithDefault(TVMenuFields.KEY_CURRENT_VAL, \"#ffffff\");\r\n        item.setCurrentValue(rgb);\r\n        return new MenuItemUpdateCommand(MenuCommandType.BOOT_RGB_COLOR, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), rgb)\r\n    }\r\n\r\n    private processAnalogItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item: AnalogMenuItem = this.processMenuItem<AnalogMenuItem>((parser, id) => new AnalogMenuItem(id));\r\n        item.setOffset(parser.getValueAsInt(TVMenuFields.KEY_ANALOG_OFFSET_FIELD));\r\n        item.setDivisor(parser.getValueAsInt(TVMenuFields.KEY_ANALOG_DIVISOR_FIELD));\r\n        item.setMaxValue(parser.getValueAsInt(TVMenuFields.KEY_ANALOG_MAX_FIELD));\r\n        item.setUnitName(parser.getValueWithDefault(TVMenuFields.KEY_ANALOG_UNIT_FIELD, \"\"));\r\n        const currentVal = parseInt(parser.getValue(TVMenuFields.KEY_CURRENT_VAL));\r\n        item.setCurrentValue(currentVal);\r\n        return new MenuItemUpdateCommand(MenuCommandType.ANALOG_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), currentVal);\r\n    }\r\n\r\n    private processBooleanItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item: BooleanMenuItem = this.processMenuItem<BooleanMenuItem>((parser, id) => new BooleanMenuItem(id));\r\n        item.setNaming(parser.getValueAsInt(TVMenuFields.KEY_BOOLEAN_NAMING));\r\n        const current = parser.getValue(TVMenuFields.KEY_CURRENT_VAL) === '1';\r\n        item.setCurrentValue(current);\r\n        return new MenuItemUpdateCommand(MenuCommandType.BOOLEAN_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n\r\n    private processFloatItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item: FloatMenuItem = this.processMenuItem<FloatMenuItem>((parser, id) => new FloatMenuItem(id));\r\n        item.setDecimalPlaces(parser.getValueAsInt(TVMenuFields.KEY_FLOAT_DECIMAL_PLACES));\r\n        const current = (parseFloat(parser.getValue(TVMenuFields.KEY_CURRENT_VAL)));\r\n        item.setCurrentValue(current);\r\n        return new MenuItemUpdateCommand(MenuCommandType.FLOAT_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n\r\n    private processScrollChoiceItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item: ScrollChoiceMenuItem = this.processMenuItem<ScrollChoiceMenuItem>((parser, id) => new ScrollChoiceMenuItem(id));\r\n        item.setNumberOfEntries(parser.getValueAsInt(TVMenuFields.KEY_NO_OF_CHOICES));\r\n        const current = (ScrollChoice.fromString(TVMenuFields.KEY_CURRENT_VAL));\r\n        item.setCurrentValue(current);\r\n        return new MenuItemUpdateCommand(MenuCommandType.BOOT_SCROLL_CHOICE, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n\r\n    private processTextItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item = this.processMenuItem<EditableTextMenuItem>((parser, id) => new EditableTextMenuItem(id));\r\n        item.setTextLength(parser.getValueAsInt(TVMenuFields.KEY_MAX_LENGTH));\r\n        item.setEditMode(parser.getValueAsInt(TVMenuFields.KEY_EDIT_TYPE));\r\n        const current = (parser.getValueWithDefault(TVMenuFields.KEY_CURRENT_VAL, \"\"));\r\n        item.setCurrentValue(current);\r\n        return new MenuItemUpdateCommand(MenuCommandType.TEXT_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n\r\n    private processLargeNumItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item = this.processMenuItem<EditableLargeNumberMenuItem>((parser, id) => new EditableLargeNumberMenuItem(id));\r\n        item.setDecimalPlaces(parser.getValueAsInt(TVMenuFields.KEY_FLOAT_DECIMAL_PLACES));\r\n        item.setNegativeAllowed(parser.getValueAsInt(TVMenuFields.KEY_NEGATIVE_ALLOWED) > 0);\r\n        item.setDigitsAllowed(parser.getValueAsInt(TVMenuFields.KEY_MAX_LENGTH));\r\n        const current = (parseFloat(parser.getValueWithDefault(TVMenuFields.KEY_CURRENT_VAL, \"0\")));\r\n        item.setCurrentValue(current);\r\n        return new MenuItemUpdateCommand(MenuCommandType.LARGE_NUM_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n\r\n    private processListItem(parser: TagValProtocolParser): MenuCommand {\r\n        const item = this.processMenuItem<ListMenuItem>((parser, id) => new ListMenuItem(id));\r\n        const num = parser.getValueAsIntWithDefault(TVMenuFields.KEY_NO_OF_CHOICES, 0);\r\n        const items = listItemHasUpdated(num, parser);\r\n        item.setCurrentValue(items);\r\n        return new MenuItemUpdateCommand(MenuCommandType.RUNTIME_LIST_BOOT, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), items);\r\n    }\r\n\r\n    private processEnumItem(parser: TagValProtocolParser): MenuCommand {\r\n        let item: EnumMenuItem = this.processMenuItem<EnumMenuItem>((parser, id) => new EnumMenuItem(id));\r\n\r\n        let enumItems = [];\r\n        let noOfItems = parser.getValueAsInt(TVMenuFields.KEY_NO_OF_CHOICES);\r\n        for(let i=0; i<noOfItems; i++) {\r\n            enumItems.push(parser.getValueWithDefault(\"C\" + String.fromCharCode(65 + i), \"\"));\r\n        }\r\n\r\n        item.setItemList(enumItems);\r\n        const current = (parseInt(parser.getValue(TVMenuFields.KEY_CURRENT_VAL)));\r\n        item.setCurrentValue(current);\r\n\r\n        return new MenuItemUpdateCommand(MenuCommandType.ENUM_BOOT_ITEM, item, parser.getValue(TVMenuFields.KEY_PARENT_ID_FIELD), current);\r\n    }\r\n}\r\n\r\nexport function toPrintableMessage(rawMessage: string): string {\r\n    let cleanMsg = \"\";\r\n    for(let i=0; i<rawMessage.length; i++) {\r\n        let charNum = rawMessage.charCodeAt(i);\r\n        if(charNum<31) {\r\n            cleanMsg += \"<\" + charNum + \">\";\r\n        }\r\n        else {\r\n            cleanMsg += rawMessage.charAt(i);\r\n        }\r\n    }\r\n    return cleanMsg;\r\n}\r\n\r\nfunction incomingChangeMessage(p: TagValProtocolParser) {\r\n    const ty = p.getValueAsInt(TVMenuFields.KEY_CHANGE_TYPE);\r\n    const correlation = p.getValueWithDefault(\"\", TVMenuFields.KEY_CORRELATION_FIELD);\r\n    let currentVal = \"\";\r\n    if(ty === ChangeType.ABSOLUTE_LIST) {\r\n        const items = p.getValueAsIntWithDefault(TVMenuFields.KEY_NO_OF_CHOICES, 0);\r\n        listItemHasUpdated(items, p);\r\n    } else {\r\n        currentVal = p.getValueWithDefault(TVMenuFields.KEY_CURRENT_VAL, \"\");\r\n    }\r\n\r\n    return new ItemChangeCommand(p.getValue(TVMenuFields.KEY_ID_FIELD), ty, currentVal, correlation);\r\n}\r\n\r\nfunction listItemHasUpdated(items: number, parser: TagValProtocolParser): Array<string> {\r\n    let list = Array<string>();\r\n    for(let i=0; i<items; i++) {\r\n        let character = String.fromCharCode(65 + i);\r\n        const name = parser.getValueWithDefault(TVMenuFields.KEY_PREPEND_NAMECHOICE + character, \"\");\r\n        const value = parser.getValueWithDefault(TVMenuFields.KEY_PREPEND_CHOICE + character, \"\");\r\n        list.push(name + \" \" + value);\r\n    }\r\n    return list;\r\n}\r\n\r\nfunction fromTextToDlgMode(value: string): DialogMode {\r\n    return value==='S' ? DialogMode.SHOW : value === 'H' ? DialogMode.HIDE : DialogMode.ACTION;\r\n}\r\n","import {MenuItem, SubMenuItem} from \"./MenuItem\";\r\n\r\ntype TreeStructureChangedFn = (menuTree: MenuTree, id: string) => void;\r\n\r\nexport class MenuTree {\r\n    private allItemMap: { [id: string]: MenuItem<any>; } = {};\r\n    private readonly rootElement = new SubMenuItem(\"ROOT\", \"0\");\r\n    private treeStructureChanged: TreeStructureChangedFn;\r\n\r\n    constructor(treeStructChangeFn: TreeStructureChangedFn) {\r\n        this.allItemMap[\"0\"] = this.rootElement;\r\n        this.treeStructureChanged = treeStructChangeFn;\r\n    }\r\n\r\n    public getRoot() {\r\n        return this.rootElement;\r\n    }\r\n\r\n    public getMenuItemFor(key: string): MenuItem<any> {\r\n        return this.allItemMap[key];\r\n    }\r\n\r\n    public addMenuItem(subMenuId: string, menuItem: MenuItem<any>): boolean {\r\n        if(!this.getMenuItemFor(menuItem.getMenuId())) {\r\n            let sub = this.allItemMap[subMenuId] as SubMenuItem;\r\n            if (!sub) sub = this.rootElement;\r\n            sub.addChildItem(menuItem);\r\n            this.allItemMap[menuItem.getMenuId()] = menuItem;\r\n            this.treeStructureChanged(this, menuItem.getMenuId());\r\n            return true;\r\n        }\r\n        else return false; // already existed so not re-added.\r\n    }\r\n\r\n    emptyTree() {\r\n        this.allItemMap = {};\r\n        this.rootElement.clearAll();\r\n        this.allItemMap[\"0\"] = this.rootElement;\r\n        this.treeStructureChanged(this, this.rootElement.getMenuId());\r\n    }\r\n}","import {\r\n    AckStatus,\r\n    ApiPlatform,\r\n    BootstrapMode,\r\n    ButtonType,\r\n    ChangeType,\r\n    DialogMode,\r\n    HeartbeatMode,\r\n    MenuCommandType\r\n} from \"./protocol/TagValEnums\";\r\nimport {TagValProtocolHandler, TcProtocolHandler, toPrintableMessage} from \"./protocol/TagValProtocol\";\r\nimport {MenuTree} from \"./MenuTree\";\r\nimport {AnalogMenuItem, BooleanMenuItem, EnumMenuItem, ScrollChoice, ScrollChoiceMenuItem} from \"./MenuItem\";\r\nimport {\r\n    AcknowledgmentCommand,\r\n    BootstrapCommand,\r\n    DialogUpdateCommand,\r\n    HeartbeatCommand,\r\n    ItemChangeCommand,\r\n    JoinCommand,\r\n    MenuCommand,\r\n    PairingCommand\r\n} from \"./protocol/MenuCommands\";\r\n\r\nexport type APIMessageHandler = (protocol: number, rawMessage: string) => void;\r\nexport type APIConnectionListener = (connected: boolean, text: string) => void;\r\nexport type DialogUpdateCallback = (shown: boolean, title: string, content: string, btn1: ButtonType, btn2: ButtonType) => void;\r\nexport type PairingCallback = (update: string) => void;\r\n\r\nexport interface APIConnector {\r\n    start(): void;\r\n    stop(): void;\r\n    closeConnection(): void;\r\n    sendMessage(rawMessage: string): void;\r\n    registerMessageHandler(messageHandler: APIMessageHandler): void;\r\n    registerConnectionListener(connectionListener: APIConnectionListener): void;\r\n    isConnected(): boolean;\r\n    getName(): string;\r\n    lastDisconnectTime(): number;\r\n}\r\n\r\nexport interface MenuComponent {\r\n    structureHasChanged(): void;\r\n    itemHasUpdated(): void;\r\n    tick(timeNow: number): void;\r\n    ackReceived(correlationId: number, ackStatus: AckStatus): void;\r\n}\r\n\r\nexport interface AppInfo {\r\n    getAppName(): string;\r\n    getAppUuid(): string;\r\n}\r\n\r\nlet staticCorCount = 0;\r\nfunction makeCorrelation(): number {\r\n    return Math.floor((Math.random() * 0xfffff) + (++staticCorCount));\r\n}\r\n\r\nexport enum ControllerState {\r\n    STOPPED,\r\n    NOT_CONNECTED,\r\n    CONNECTED,\r\n    BOOTSTRAP,\r\n    READY,\r\n    FAILED_AUTHENTICATION,\r\n    PAIRED_OK\r\n}\r\nexport type MenuStateListener = (update: ControllerState) => void;\r\n\r\nexport type CustomMessageHandler = (cmd: MenuCommand) => void;\r\n\r\nexport class MenuController {\r\n    private readonly menuTree: MenuTree;\r\n    private readonly protocolHandler: TcProtocolHandler;\r\n    private appInfo: AppInfo;\r\n    private componentsById: {[id: string]: MenuComponent} = {};\r\n    private lastHeartbeatRx: number;\r\n    private lastHeartbeatTx: number;\r\n    private hbFrequency: number = 1500;\r\n    private currentConnection: string = \"\";\r\n    private appName: string = \"\";\r\n    private appVersion: number = 0.0;\r\n    private appPlatform: ApiPlatform = ApiPlatform.JS_API;\r\n    private connector: APIConnector;\r\n    private dialogListener: DialogUpdateCallback|undefined;\r\n    private currentState: ControllerState = ControllerState.STOPPED;\r\n    private stateListener: MenuStateListener|undefined = undefined;\r\n    private pairingMode: boolean = false;\r\n    private customMessageHandler: CustomMessageHandler;\r\n\r\n    public constructor(connector: APIConnector, appInfo: AppInfo) {\r\n        this.appInfo = appInfo;\r\n        this.menuTree = new MenuTree((menuTree, id) => this.rebuildTree(false));\r\n        this.lastHeartbeatRx = this.lastHeartbeatTx = Date.now();\r\n        this.connector = connector;\r\n        this.protocolHandler = new TagValProtocolHandler(this.menuTree);\r\n        this.customMessageHandler = (m) => console.warn(`unhandled message on ${this.connector.getName()} - ${m}`);\r\n    }\r\n\r\n    private setCurrentState(state: ControllerState) {\r\n        this.currentState = state;\r\n        if(this.stateListener) this.stateListener(state);\r\n    }\r\n\r\n    public getCurrentState(): ControllerState {\r\n        return this.currentState;\r\n    }\r\n\r\n    public registerStateListener(l: MenuStateListener): void {\r\n        this.stateListener = l;\r\n        l(this.currentState);\r\n    }\r\n\r\n    public isRunning(): boolean {\r\n        return this.currentState !== ControllerState.STOPPED && this.currentState !== ControllerState.FAILED_AUTHENTICATION;\r\n    }\r\n\r\n    public start() {\r\n        if(this.isRunning()) return;\r\n        this.connector.registerMessageHandler((proto, msg) => this.messageProcessor(msg));\r\n        this.setCurrentState(ControllerState.NOT_CONNECTED);\r\n\r\n        this.connector.registerConnectionListener((connected, why) => {\r\n            if(connected) {\r\n                this.setCurrentState(ControllerState.CONNECTED);\r\n                this.sendMessage(\r\n                    this.protocolHandler.convertCommandToWire(new HeartbeatCommand(this.hbFrequency, HeartbeatMode.START))\r\n                );\r\n                if(this.pairingMode) {\r\n                    this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                        new PairingCommand(this.appInfo.getAppName(), this.appInfo.getAppUuid()))\r\n                    );\r\n                } else {\r\n                    this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                        new JoinCommand(this.appInfo.getAppName(), this.appInfo.getAppUuid(), ApiPlatform.JS_API, parseAppVersion()))\r\n                    );\r\n                }\r\n                this.menuTree.emptyTree();\r\n                this.rebuildTree(false);\r\n            }\r\n            else {\r\n                this.setCurrentState(ControllerState.NOT_CONNECTED);\r\n                this.menuTree.emptyTree();\r\n                this.rebuildTree(true);\r\n            }\r\n        })\r\n\r\n        this.checkHeartbeats();\r\n\r\n        this.tickAllElements();\r\n\r\n        this.connector.start();\r\n    }\r\n\r\n    public async attemptPairing(cb: PairingCallback): Promise<boolean> {\r\n        this.pairingMode = true;\r\n        this.start();\r\n        const startTime = Date.now();\r\n\r\n        try {\r\n            while ((Date.now() - startTime) < 20000) {\r\n                if (this.currentState === ControllerState.FAILED_AUTHENTICATION) return false;\r\n                if(this.currentState === ControllerState.PAIRED_OK) return true;\r\n                cb(ControllerState[this.currentState]);\r\n                await delay(500);\r\n            }\r\n        }\r\n        finally {\r\n            this.stop();\r\n            this.pairingMode = false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public stop() {\r\n        this.pairingMode = false;\r\n        this.setCurrentState(ControllerState.STOPPED);\r\n        this.connector?.closeConnection();\r\n        this.menuTree.emptyTree();\r\n        this.componentsById = {};\r\n    }\r\n\r\n    private tickAllElements() {\r\n        if(this.connector.isConnected()) {\r\n            const dt = Date.now();\r\n            Object.values(this.componentsById).forEach(comp => comp.tick(dt));\r\n\r\n        }\r\n        setTimeout(this.tickAllElements.bind(this), this.connector.isConnected() ? 100 : 1000);\r\n    }\r\n\r\n    private checkHeartbeats() {\r\n        const now = Date.now();\r\n        if(this.connector.isConnected() && (now - this.lastHeartbeatRx) > (this.hbFrequency * 3)) {\r\n            console.error(\"Connecting closing due to inactivity\" + this.connector.getName())\r\n            this.connector.closeConnection();\r\n        }\r\n\r\n        if(this.connector.isConnected() && (now - this.lastHeartbeatTx) > this.hbFrequency) {\r\n            this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                new HeartbeatCommand(this.hbFrequency, HeartbeatMode.NORMAL)\r\n            ));\r\n        }\r\n\r\n        if(!this.connector.isConnected() && (now - this.connector.lastDisconnectTime()) > 8000) {\r\n            this.connector.start();\r\n        }\r\n\r\n        if(this.isRunning()) setTimeout( () => this.checkHeartbeats(), 500);\r\n    }\r\n\r\n    public getTree() { return this.menuTree; }\r\n\r\n    public getMenuName(): string {\r\n        if(this.connector.isConnected()) {\r\n            return this.appName + \", V\" + this.appVersion + \" \" + ApiPlatform[this.appPlatform];\r\n        }\r\n        else {\r\n            return \"Lost connection\";\r\n        }\r\n    }\r\n\r\n    private rebuildTree(cleanComponents: boolean) {\r\n        if(cleanComponents) {\r\n            console.info(\"Cleaning down components\");\r\n            let rootId = this.menuTree.getRoot().getMenuId();\r\n            let rootComponent = this.componentsById[rootId];\r\n            this.componentsById = {};\r\n            if(rootComponent) this.componentsById[rootId] = rootComponent;\r\n        }\r\n\r\n        if(this.currentState === ControllerState.READY) {\r\n            Object.values(this.componentsById).forEach(comp => comp.structureHasChanged());\r\n        }\r\n    }\r\n\r\n    public putMenuComponent(id: string, comp: MenuComponent) {\r\n        this.componentsById[id] = comp;\r\n    }\r\n\r\n    sendActionableUpdate(itemId: string): number|undefined {\r\n        try {\r\n            let item = this.menuTree.getMenuItemFor(itemId);\r\n            if (!item) return undefined;\r\n            const val = (item instanceof BooleanMenuItem) ? !item.getCurrentValue() : false;\r\n            const correlation = makeCorrelation();\r\n            this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                new ItemChangeCommand(item.getMenuId(), ChangeType.ABSOLUTE, val ? \"1\":\"0\", correlation.toString(16))\r\n            ));\r\n\r\n            return correlation;\r\n        }\r\n        catch(e) {\r\n            console.error(`Action update was not sent for ${itemId}`);\r\n            this.connector.closeConnection();\r\n        }\r\n    }\r\n\r\n    sendAbsoluteUpdate(itemId: string, amt: string): number|undefined {\r\n        try {\r\n            const item = this.menuTree.getMenuItemFor(itemId);\r\n            const correlation = makeCorrelation();\r\n            this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                new ItemChangeCommand(item.getMenuId(), ChangeType.ABSOLUTE, amt, correlation.toString(16))\r\n            ));\r\n            return correlation;\r\n        }\r\n        catch (e) {\r\n            console.error(`Update was not sent for ${itemId} change ${amt}`, e);\r\n            this.connector.closeConnection();\r\n        }\r\n    }\r\n\r\n    sendDialogAction(button: ButtonType): number|undefined {\r\n        try {\r\n            const correlation = makeCorrelation();\r\n            this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                new DialogUpdateCommand(DialogMode.ACTION, \"\", \"\", button, button, correlation.toString(16))\r\n            ));\r\n            return correlation;\r\n        }\r\n        catch (e) {\r\n            console.error(`Dialog action not sent for ${button}`, e);\r\n            this.connector.closeConnection();\r\n        }\r\n    }\r\n\r\n    sendDeltaUpdate(itemId: string, amt: number): number|undefined {\r\n        try {\r\n            const correlation = makeCorrelation();\r\n            let item = this.menuTree.getMenuItemFor(itemId);\r\n            if(item instanceof ScrollChoiceMenuItem) {\r\n                let sp = item.getCurrentValue();\r\n                sp.currentPos += amt;\r\n                this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                    new ItemChangeCommand(item.getMenuId(), ChangeType.ABSOLUTE, sp.asString(), correlation.toString(16))\r\n                ));\r\n                return correlation;\r\n            } else if ((item instanceof AnalogMenuItem) || (item instanceof EnumMenuItem)) {\r\n                this.sendMessage(this.protocolHandler.convertCommandToWire(\r\n                    new ItemChangeCommand(item.getMenuId(), ChangeType.DELTA, amt.toFixed(0), correlation.toString(16))\r\n                ));\r\n                return correlation;\r\n            }\r\n        }\r\n        catch(e) {\r\n            console.error(`Delta update was not sent for ${itemId} change ${amt}`, e);\r\n            this.connector.closeConnection();\r\n        }\r\n    }\r\n\r\n    private messageProcessor(msg: string): void {\r\n        const possibleMsg = this.protocolHandler.convertWireToCommand(msg);\r\n        if(!possibleMsg) return;\r\n        this.lastHeartbeatRx = Date.now();\r\n\r\n        switch (possibleMsg.commandType) {\r\n            case MenuCommandType.JOIN:\r\n                this.joinReceived(possibleMsg as JoinCommand);\r\n                break;\r\n            case MenuCommandType.CHANGE_INT_FIELD:\r\n                this.itemHasUpdated(possibleMsg as ItemChangeCommand);\r\n                break;\r\n            case MenuCommandType.HEARTBEAT:\r\n                this.heartbeatReceived(possibleMsg as HeartbeatCommand);\r\n                break;\r\n            case MenuCommandType.PAIRING_REQUEST:\r\n                this.pairingRequest(possibleMsg as PairingCommand);\r\n                break;\r\n            case MenuCommandType.DIALOG_UPDATE:\r\n                this.dialogHasUpdated(possibleMsg as DialogUpdateCommand);\r\n                break;\r\n            case MenuCommandType.BOOTSTRAP:\r\n                this.bootstrapEvent(possibleMsg as BootstrapCommand);\r\n                break;\r\n            case MenuCommandType.ACKNOWLEDGEMENT:\r\n                this.acknowledgement(possibleMsg as AcknowledgmentCommand);\r\n                break;\r\n            case MenuCommandType.BOOT_SCROLL_CHOICE:\r\n            case MenuCommandType.BOOT_RGB_COLOR:\r\n            case MenuCommandType.ENUM_BOOT_ITEM:\r\n            case MenuCommandType.LARGE_NUM_BOOT_ITEM:\r\n            case MenuCommandType.ANALOG_BOOT_ITEM:\r\n            case MenuCommandType.BOOLEAN_BOOT_ITEM:\r\n            case MenuCommandType.FLOAT_BOOT_ITEM:\r\n            case MenuCommandType.RUNTIME_LIST_BOOT:\r\n            case MenuCommandType.TEXT_BOOT_ITEM:\r\n            case MenuCommandType.ACTION_BOOT_ITEM:\r\n            case MenuCommandType.SUBMENU_BOOT_ITEM:\r\n                console.info(\"Incoming boot command rx but already processed by protocol\", possibleMsg.commandType);\r\n                break;\r\n            default:\r\n                this.customMessageHandler(possibleMsg);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public heartbeatReceived(hb: HeartbeatCommand) {\r\n        this.hbFrequency = hb.frequency;\r\n        console.log(\"hbrx: \" + hb.mode + \", freq: \" + hb.frequency);\r\n    }\r\n\r\n    public pairingRequest(pair: PairingCommand) {\r\n        console.log(\"Pair: \" + pair.appName + \", uuid: \" + pair.appUuid);\r\n    }\r\n\r\n    dialogHasUpdated(dlg: DialogUpdateCommand) {\r\n        if(this.dialogListener) this.dialogListener(dlg.mode === DialogMode.SHOW, dlg.header, dlg.buffer,\r\n            dlg.button1, dlg.button2);\r\n    }\r\n\r\n    joinReceived(join: JoinCommand) {\r\n        this.currentConnection = join.name;\r\n        this.appName = join.name;\r\n        this.appVersion = join.version;\r\n        this.appPlatform = join.platform;\r\n        this.componentsById[\"0\"].structureHasChanged();\r\n\r\n        console.log(\"join: \" + this.appName + \", uuid: \" + join.uuid + \", platform: \" + this.appPlatform + \", ver: \" + this.appVersion);\r\n    }\r\n\r\n    public bootstrapEvent(evt: BootstrapCommand) {\r\n        let gotStart = (evt.bootstrapMode === BootstrapMode.START);\r\n        this.setCurrentState(gotStart ? ControllerState.BOOTSTRAP : ControllerState.READY);\r\n        if(!gotStart) this.rebuildTree(false);\r\n\r\n        console.debug(\"Boot event \" + evt.bootstrapMode);\r\n    }\r\n\r\n    public acknowledgement(ack: AcknowledgmentCommand) {\r\n        console.debug(\"acknowledgement received \" + ack.correlation + \" - \" + ack.status);\r\n        if(ack.correlation && parseInt(ack.correlation, 16) > 0) {\r\n            Object.values(this.componentsById).forEach(item => item.ackReceived(parseInt(ack.correlation, 16), ack.status));\r\n        }\r\n        else if(this.currentState === ControllerState.CONNECTED) {\r\n            if(ack.status !== AckStatus.SUCCESS) {\r\n                this.setCurrentState(ControllerState.FAILED_AUTHENTICATION);\r\n            }\r\n            else if(this.pairingMode) {\r\n                this.setCurrentState(ControllerState.PAIRED_OK);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    itemHasUpdated(chg: ItemChangeCommand) {\r\n        let item = this.menuTree.getMenuItemFor(chg.menuId);\r\n        if(!item) return;\r\n        switch(item.messageType) {\r\n            case \"Analog\":\r\n            case \"Enum\":\r\n                item.setCurrentValue(parseInt(chg.value.toString(), 10));\r\n                break;\r\n            case \"LargeNum\":\r\n                item.setCurrentValue(parseFloat(chg.value.toString()));\r\n                break;\r\n            case \"Boolean\":\r\n                item.setCurrentValue(parseInt(chg.value.toString()));\r\n                break;\r\n            case \"Scroll\":\r\n                item.setCurrentValue(ScrollChoice.fromString(chg.value.toString()));\r\n                break;\r\n            case \"List\":\r\n                item.setCurrentValue(chg.value as string[]);\r\n                break;\r\n            default:\r\n                item.setCurrentValue(chg.value.toString());\r\n                break;\r\n        }\r\n        this.componentsById[chg.menuId]?.itemHasUpdated();\r\n    }\r\n\r\n    public sendMessage(data: string) {\r\n        try {\r\n            console.debug(`Sending message to ${this.connector.getName()} content: ${toPrintableMessage(data)}`);\r\n            this.connector.sendMessage(data);\r\n            this.lastHeartbeatTx = Date.now();\r\n        }\r\n        catch(e) {\r\n            console.log(\"Exception caught during send: \" + e);\r\n            this.connector.closeConnection();\r\n        }\r\n    }\r\n\r\n    public registerCustomMessageHandler(customHandler: CustomMessageHandler): void {\r\n        this.customMessageHandler = customHandler;\r\n    }\r\n\r\n    registerDialogListener(listener: DialogUpdateCallback) {\r\n        this.dialogListener = listener;\r\n    }\r\n}\r\n\r\nfunction delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n}\r\n\r\nfunction parseAppVersion(): number {\r\n    const rawVersion = process.env.REACT_APP_VERSION;\r\n    if(!rawVersion) return 0;\r\n\r\n    const regex = /(\\d+)\\.(\\d+).*/;\r\n    const match = rawVersion.match(regex);\r\n    if(match && match.length > 1) {\r\n        return (parseInt(match[0]) * 100) + parseInt(match[1]);\r\n    }\r\n    return 0;\r\n}","import {\r\n    AnalogMenuItem,\r\n    BooleanMenuItem,\r\n    BooleanNaming,\r\n    EditableLargeNumberMenuItem,\r\n    EditableTextMenuItem,\r\n    EnumMenuItem,\r\n    FloatMenuItem, ListMenuItem,\r\n    MenuItem,\r\n    Rgb32MenuItem,\r\n    ScrollChoiceMenuItem, TextEditMode\r\n} from \"./MenuItem\";\r\nimport {TcProtocolError} from \"./protocol/TagValProtocol\";\r\n\r\nfunction isTrue(currentValue: string): boolean {\r\n    return currentValue.charAt(0) === \"Y\" || currentValue.charAt(0) === \"1\" || currentValue.charAt(0) === \"T\";\r\n}\r\n\r\nexport function formatStringToWire(item: MenuItem<any>, currentValue: string): string {\r\n    if(item instanceof AnalogMenuItem) {\r\n        let num = parseFloat(currentValue);\r\n        num = Math.round((num * item.getDivisor()) - item.getOffset());\r\n        if(num < 0 || num > item.getMaxValue()) throw new TcProtocolError(`Number ${num} outside of 0..${item.getMaxValue()}`);\r\n        return num.toFixed(0);\r\n    }\r\n    else if(item instanceof EnumMenuItem) {\r\n        let num = parseInt(currentValue);\r\n        if(num < 0 || num >= item.getItemList().length) throw new TcProtocolError(`Enum ${num} outside allowable range`);\r\n        return item.getCurrentValue().toFixed(0);\r\n    }\r\n    else if(item instanceof BooleanMenuItem) return isTrue(currentValue) ? \"1\" : \"0\";\r\n    else if(item instanceof EditableLargeNumberMenuItem) {\r\n        let flt = parseFloat(currentValue);\r\n        if(flt < 0 && !item.isNegativeAllowed()) throw new TcProtocolError(\"Negative value not allowed\");\r\n        return flt.toFixed(item.getDecimalPlaces());\r\n    }\r\n    else if(item instanceof EditableTextMenuItem) {\r\n        return formatEditableTextWire(item, currentValue);\r\n    }\r\n    else if(item instanceof Rgb32MenuItem) {\r\n        if(!currentValue.match(\"#[0-9A-Fa-f]*\")) throw new TcProtocolError(\"Not in HTML color format\");\r\n        return currentValue;\r\n    }\r\n    else if(item instanceof ScrollChoiceMenuItem)  {\r\n        let num = parseInt(currentValue);\r\n        return num.toFixed(0) + \"-\";\r\n    }\r\n    else throw new TcProtocolError(\"Unknown type of item for text conversion\");\r\n}\r\n\r\nexport function formatForDisplay(item: MenuItem<any>): string {\r\n    if(item instanceof FloatMenuItem) return item.getCurrentValue().toFixed(item.getDecimalPlaces());\r\n    else if(item instanceof AnalogMenuItem) return formatAnalogItem(item);\r\n    else if(item instanceof EnumMenuItem) return item.getItemList()[item.getCurrentValue()];\r\n    else if(item instanceof BooleanMenuItem) return formatBooleanItem(item);\r\n    else if(item instanceof EditableTextMenuItem) return item.getCurrentValue();\r\n    else if(item instanceof EditableLargeNumberMenuItem) return item.getCurrentValue().toFixed(item.getDecimalPlaces());\r\n    else if(item instanceof Rgb32MenuItem) return item.getCurrentValue();\r\n    else if(item instanceof ScrollChoiceMenuItem) return item.getCurrentValue().currentValue;\r\n    else if(item instanceof ListMenuItem) return Object.values(item.getCurrentValue()).join(\", \");\r\n    else return \"\";\r\n}\r\n\r\nfunction formatBooleanItem(item: BooleanMenuItem) {\r\n    let curr = item.getCurrentValue();\r\n    switch(item.getNaming()) {\r\n        case BooleanNaming.YES_NO: return curr ? \"YES\" : \"NO\";\r\n        case BooleanNaming.ON_OFF: return curr ? \"ON\" : \"OFF\";\r\n        default: return curr ? \"TRUE\" : \"FALSE\";\r\n    }\r\n}\r\n\r\nfunction getActualDecimalDivisor(divisor: number): number {\r\n    if (divisor < 2) return 1;\r\n    return (divisor > 1000) ? 10000 : (divisor > 100) ? 1000 : (divisor > 10) ? 100 : 10;\r\n}\r\n\r\nfunction calculateRequiredDigits(divisor: number) {\r\n    return (divisor <= 10) ? 1 : (divisor <= 100) ? 2 : (divisor <= 1000) ? 3 : 4;\r\n}\r\n\r\nfunction formatAnalogItem(an: AnalogMenuItem) {\r\n    let calcVal = an.getCurrentValue() + an.getOffset();\r\n    let divisor = an.getDivisor();\r\n\r\n    if (divisor < 2)  {\r\n        return calcVal.toFixed(0);\r\n    } else {\r\n        let whole = Math.floor(calcVal / divisor);\r\n        let fractMax = getActualDecimalDivisor(an.getDivisor());\r\n        let fraction = (Math.abs((calcVal % divisor)) * (fractMax / divisor)).toFixed(0);\r\n        return whole.toFixed(0) + \".\" + fraction.padStart(calculateRequiredDigits(divisor), \"0\") + an.getUnitName();\r\n    }\r\n}\r\n\r\nfunction formatEditableTextWire(et: EditableTextMenuItem, val: string)  {\r\n    if(et.getEditMode() === TextEditMode.PLAIN_TEXT) {\r\n        if(val.length > et.getTextLength()) throw new TcProtocolError(\"Text too long\");\r\n        return val;\r\n    }\r\n    else if(et.getEditMode() === TextEditMode.IP_ADDRESS)\r\n    {\r\n        if (!val.match(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) throw new TcProtocolError(\"Not an IPV4 address\");\r\n        return val;\r\n    }\r\n    else if(et.getEditMode() === TextEditMode.TIME_24H || et.getEditMode() === TextEditMode.TIME_24_HUNDREDS || et.getEditMode() === TextEditMode.TIME_12H)\r\n    {\r\n        // time is always sent back to the server in 24 hour format, it is always possible (but optional) to provide hundreds/sec.\r\n        if (!val.match(\"\\\\d+:\\\\d+:\\\\d+(.\\\\d*)*\")) throw new TcProtocolError(\"Not in the correct time format\");\r\n        return val;\r\n    }\r\n    else if (et.getEditMode() === TextEditMode.GREGORIAN_DATE)\r\n    {\r\n        if (!val.match(\"\\\\d+/\\\\d+/\\\\d+\")) throw new TcProtocolError(\"Not a date\");\r\n        return val;\r\n    }\r\n    return \"\";\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pairingExample.0c2261c4.jpg\";","import {Component} from \"react\";\r\nimport pairingImg from './img/pairingExample.jpg';\r\nimport {MenuController} from \"./api/MenuController\";\r\n\r\nenum PairingMode { NOT_STARTED, STARTED, DONE}\r\ntype PairingPanelProps = { controller: MenuController };\r\ntype PairingPanelState = { status: string, buttonText: string, pairingMode: PairingMode };\r\n\r\nexport class PairingPanel extends Component<PairingPanelProps, PairingPanelState> {\r\n\r\n    constructor(props: Readonly<PairingPanelProps> | PairingPanelProps) {\r\n        super(props);\r\n        this.state = {status: \"Not started\", buttonText: \"Start pairing with device\", pairingMode: PairingMode.NOT_STARTED};\r\n        this.pairingButtonClicked = this.pairingButtonClicked.bind(this);\r\n    }\r\n\r\n    async pairingButtonClicked() {\r\n        if(this.state.pairingMode === PairingMode.NOT_STARTED) {\r\n            const paired = await this.props.controller.attemptPairing((update: string) => {\r\n                this.setState({status: update, buttonText: \"Stop pairing attempt\", pairingMode: PairingMode.STARTED});\r\n            });\r\n            if(paired) {\r\n                this.setState({status: \"Successfully paired\", buttonText: \"Close and reconnect\", pairingMode: PairingMode.DONE});\r\n            }\r\n            else {\r\n                this.setState({status: \"Pairing unsuccessful\", buttonText: \"Try pairing again\", pairingMode: PairingMode.NOT_STARTED});\r\n            }\r\n        }\r\n        else if(this.state.pairingMode === PairingMode.STARTED) {\r\n            this.props.controller.stop();\r\n        }\r\n        else {\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <h2>Device requires that you pair with it</h2>\r\n            <img src={pairingImg} className=\"pairing-image\" alt=\"Example pairing screen on device\"/>\r\n            <p>The connection to the device was not allowed, you need to pair with the device first. To do this\r\n            make sure that the device close by before proceeding, as you will need to 'Accept' the pairing on\r\n            the device itself.</p>\r\n            <p>Over to the left is how the pairing screen looks, you simply choose the accept option to allow this\r\n            device to connect. Ensure you only ever press accept when you are pairing yourself.</p>\r\n            <p>Current Status: <span>{this.state.status}</span></p>\r\n            <div>\r\n                <button className=\"settingsButton\" onClick={this.pairingButtonClicked}>{this.state.buttonText}</button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport {FloatMenuItem, ListMenuItem, MenuItem, Rgb32MenuItem, SubMenuItem} from \"./api/MenuItem\";\r\nimport {ControllerState, MenuComponent, MenuController} from \"./api/MenuController\";\r\nimport {formatForDisplay, formatStringToWire} from \"./api/MenuItemFormatter\";\r\nimport {AckStatus, isAckStatusError} from \"./api/protocol/TagValEnums\";\r\nimport {PairingPanel} from \"./PairingPanel\";\r\n\r\nenum MenuUIState { READY, PENDING_UPDATE, RECENT_UPDATE, UPDATE_ERROR }\r\nconst UPDATE_HIGHLIGHT_TIME = 1000;\r\nconst MAXIMUM_WAIT_FOR_CORRELATION = 3000;\r\n\r\nexport class BaseMenuUI extends Component<{ itemId: string, controller: MenuController }, { value: string }> implements MenuComponent {\r\n    protected itemName: string = \"\";\r\n    protected itemId: string = \"\";\r\n    protected readOnly: boolean = false;\r\n    protected lastUpdate: number = Date.now();\r\n    protected itemState: MenuUIState = MenuUIState.READY;\r\n    protected outstandingCorrelation: number = 0;\r\n\r\n    constructor(props: { itemId: string, controller: MenuController }) {\r\n        super(props);\r\n        this.bindAllControls();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    private updateItem() {\r\n        let item = this.props.controller.getTree().getMenuItemFor(this.props.itemId);\r\n        if (item) {\r\n            this.props.controller.putMenuComponent(item.getMenuId(), this);\r\n            if(this.itemState === MenuUIState.READY) this.itemState = MenuUIState.RECENT_UPDATE;\r\n            this.lastUpdate = Date.now();\r\n            this.internalUpdateItem(item);\r\n        }\r\n    }\r\n\r\n    ackReceived(correlationId: number, ackStatus: AckStatus) {\r\n        if(correlationId === this.outstandingCorrelation) {\r\n            this.outstandingCorrelation = 0;\r\n            this.itemState = isAckStatusError(ackStatus) ? MenuUIState.UPDATE_ERROR : MenuUIState.RECENT_UPDATE;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    tick(timeNow: number): void {\r\n        const ticks = timeNow - this.lastUpdate;\r\n        if(this.itemState === MenuUIState.PENDING_UPDATE) {\r\n            if(ticks > MAXIMUM_WAIT_FOR_CORRELATION) {\r\n                this.itemState = MenuUIState.UPDATE_ERROR;\r\n                this.outstandingCorrelation = 0;\r\n                this.lastUpdate = Date.now();\r\n                this.forceUpdate();\r\n            }\r\n        }\r\n        else if(this.itemState !== MenuUIState.READY && ticks > UPDATE_HIGHLIGHT_TIME) {\r\n            this.itemState = MenuUIState.READY;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    calculatedClass(baseClass: string): string {\r\n        switch(this.itemState) {\r\n            case MenuUIState.PENDING_UPDATE: return baseClass + \" pendingUpdate\";\r\n            case MenuUIState.RECENT_UPDATE: return baseClass + \" itemHasUpdated\";\r\n            case MenuUIState.UPDATE_ERROR: return baseClass + \" errorDuringUpdate\";\r\n            default: return baseClass;\r\n        }\r\n    }\r\n\r\n    internalUpdateItem(item: MenuItem<any>) {\r\n        if (item.getMenuId() === \"0\") {\r\n            this.itemName = this.props.controller.getMenuName();\r\n        } else {\r\n            this.itemName = item.getItemName();\r\n        }\r\n        this.itemId = item.getMenuId();\r\n        this.readOnly = item.isReadOnly() || (item instanceof FloatMenuItem);\r\n    }\r\n\r\n    bindAllControls(): void {\r\n    }\r\n\r\n    structureHasChanged() {\r\n        this.updateItem();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    itemHasUpdated(): void {\r\n        this.updateItem();\r\n        this.forceUpdate()\r\n    }\r\n\r\n    markRecentlyUpdated(correlationId: number|undefined): void {\r\n        this.lastUpdate = Date.now();\r\n        if(correlationId) {\r\n            this.itemState = MenuUIState.PENDING_UPDATE;\r\n            this.outstandingCorrelation = correlationId;\r\n        }\r\n        else {\r\n            this.itemState = MenuUIState.UPDATE_ERROR;\r\n            this.outstandingCorrelation = 0;\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n}\r\n\r\nexport class SubMenuUI extends BaseMenuUI {\r\n    protected renderableChildren: Array<MenuItem<any>> = [];\r\n    private isExpanded: boolean = true;\r\n\r\n    internalUpdateItem(item: SubMenuItem) {\r\n        super.internalUpdateItem(item);\r\n        this.renderableChildren = item.getChildren();\r\n        this.setState( { value: \"\" });\r\n    }\r\n\r\n    bindAllControls(): void {\r\n        this.toggleExpand = this.toggleExpand.bind(this);\r\n    }\r\n\r\n    toggleExpand() {\r\n        this.isExpanded = !this.isExpanded;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const listItems = this.renderableChildren.map((ch) => {\r\n            switch (ch.messageType) {\r\n                case \"Sub\":\r\n                    return <SubMenuUI controller={this.props.controller} itemId={ch.getMenuId()}/>;\r\n                case \"Boolean\":\r\n                case \"Action\":\r\n                    return <ActionableTextMenuItem itemId={ch.getMenuId()} controller={this.props.controller}/>\r\n                case \"Analog\":\r\n                case \"Enum\":\r\n                case \"Scroll\":\r\n                    return <UpDownEditorUI controller={this.props.controller} itemId={ch.getMenuId()}/>\r\n                case \"Rgb32\":\r\n                    return <Rgb32ColorEditor itemId={ch.getMenuId()} controller={this.props.controller}/>\r\n                case \"List\":\r\n                    return <ListMenuItemUI itemId={ch.getMenuId()} controller={this.props.controller}/>\r\n                default:\r\n                    return <TextBasedMenuUI controller={this.props.controller} itemId={ch.getMenuId()}/>\r\n            }\r\n        });\r\n\r\n        return <div>\r\n            <div className=\"subMenu\">\r\n                <h3>\r\n                    <button onClick={this.toggleExpand}>{this.isExpanded ? \"-\" : \"+\"}</button>\r\n                    {this.itemName}\r\n                </h3>\r\n                <div className={this.isExpanded ? \"subShown\" : \"subHidden\" }>{listItems}</div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class RootSubMenuUI extends SubMenuUI {\r\n    private pairingMode: boolean = false;\r\n\r\n    bindAllControls() {\r\n        this.props.controller.registerStateListener((state: ControllerState) => {\r\n            if (state === ControllerState.FAILED_AUTHENTICATION) {\r\n                this.pairingMode = true;\r\n            }\r\n            this.itemHasUpdated();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.pairingMode) {\r\n            return <PairingPanel controller={this.props.controller}/>\r\n        } else return super.render();\r\n    }\r\n}\r\n\r\nexport class UpDownEditorUI extends BaseMenuUI {\r\n\r\n    internalUpdateItem(item: MenuItem<any>) {\r\n        super.internalUpdateItem(item);\r\n        this.setState({value: formatForDisplay(item) });\r\n    }\r\n\r\n    bindAllControls() {\r\n        this.sendDecrease = this.sendDecrease.bind(this);\r\n        this.sendIncrease = this.sendIncrease.bind(this);\r\n    }\r\n\r\n    sendDecrease() {\r\n        const correlation = this.props.controller?.sendDeltaUpdate(this.props.itemId, -1);\r\n        this.markRecentlyUpdated(correlation);\r\n    }\r\n\r\n    sendIncrease() {\r\n        const correlation = this.props.controller?.sendDeltaUpdate(this.props.itemId, 1);\r\n        this.markRecentlyUpdated(correlation);\r\n    }\r\n\r\n    render() {\r\n        return <div className={this.calculatedClass(\"upDownControl\")}>\r\n            <button className=\"leftBtn\" disabled={this.readOnly} onClick={this.sendDecrease}>&lt;</button>\r\n            <button className=\"rightBtn\" disabled={this.readOnly} onClick={this.sendIncrease}>&gt;</button>\r\n            <span>{this.itemName}: {this.state?.value}</span>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class TextBasedMenuUI extends BaseMenuUI {\r\n    private editingMode:boolean = false;\r\n    private rollbackValue:string = \"\";\r\n\r\n    bindAllControls() {\r\n        this.startEditing = this.startEditing.bind(this);\r\n        this.cancelPressed = this.cancelPressed.bind(this);\r\n        this.submitPressed = this.submitPressed.bind(this);\r\n        this.textHasChanged = this.textHasChanged.bind(this);\r\n    }\r\n\r\n    startEditing() {\r\n        this.editingMode = true;\r\n        this.itemHasUpdated();\r\n        this.rollbackValue = this.state.value;\r\n    }\r\n\r\n    cancelPressed() {\r\n        this.editingMode = false;\r\n        this.setState({ value: this.rollbackValue });\r\n        this.itemHasUpdated();\r\n    }\r\n\r\n    submitPressed() {\r\n        try {\r\n            this.editingMode = false;\r\n            let item = this.props.controller.getTree().getMenuItemFor(this.props.itemId);\r\n            const correlation = this.props.controller.sendAbsoluteUpdate(this.props.itemId, formatStringToWire(item, this.state.value));\r\n            this.markRecentlyUpdated(correlation);\r\n        }\r\n        catch(e) {\r\n            alert(\"Problem submitting value: \" + e);\r\n            console.error(\"Problem during submit of value\");\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    textHasChanged(event: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({ value: event.currentTarget.value});\r\n    }\r\n\r\n    internalUpdateItem(item: FloatMenuItem) {\r\n        super.internalUpdateItem(item);\r\n        this.setState({value: formatForDisplay(item)} );\r\n    }\r\n\r\n    render() {\r\n        if (this.editingMode) {\r\n            return <div className=\"upDownControl\">\r\n                <button className=\"rightBtn\" onClick={this.submitPressed}>Submit</button>\r\n                <button className=\"rightBtn\" onClick={this.cancelPressed}>Cancel</button>\r\n                <form >\r\n                    <label>{this.itemName}\r\n                    <input type=\"text\" value={this.state?.value} onChange={this.textHasChanged}/>\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        } else {\r\n            return <div className={this.calculatedClass(\"upDownControl\")}>\r\n                <button className=\"rightBtn\" onClick={this.startEditing}>Edit</button>\r\n                <div>{this.itemName}: {this.state?.value}</div>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport class ListMenuItemUI extends BaseMenuUI {\r\n    private itemList = Array<string>();\r\n\r\n    internalUpdateItem(item: MenuItem<any>) {\r\n        super.internalUpdateItem(item);\r\n        this.setState({ value: \"\" });\r\n        if(item instanceof ListMenuItem) {\r\n            this.itemList = item.getCurrentValue();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const listItems = this.itemList.map((data) => <li>{data}</li>);\r\n        return <div className={this.calculatedClass(\"upDownControl\")}>\r\n            <p>{this.itemName}</p>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport class ActionableTextMenuItem extends BaseMenuUI {\r\n\r\n    bindAllControls() {\r\n        this.buttonPressed = this.buttonPressed.bind(this);\r\n    }\r\n\r\n    internalUpdateItem(item: MenuItem<any>) {\r\n        super.internalUpdateItem(item);\r\n        const extraTxt = (item.messageType !== \"Action\") ? (\": \" + formatForDisplay(item)) : \"\";\r\n        this.setState({ value: extraTxt });\r\n    }\r\n\r\n    buttonPressed() {\r\n        const correlation = this.props.controller.sendActionableUpdate(this.props.itemId);\r\n        this.markRecentlyUpdated(correlation);\r\n    }\r\n\r\n    render() {\r\n        return <button className={this.calculatedClass(\"actionableItem\")} onClick={this.buttonPressed}>{this.itemName}{this.state?.value}</button>\r\n    }\r\n}\r\n\r\nexport class Rgb32ColorEditor extends BaseMenuUI {\r\n    private editingStarted: boolean = false;\r\n\r\n    bindAllControls() {\r\n        this.editingRequested = this.editingRequested.bind(this);\r\n        this.submitPressed = this.submitPressed.bind(this);\r\n        this.colorHasChanged = this.colorHasChanged.bind(this);\r\n    }\r\n\r\n    internalUpdateItem(item: Rgb32MenuItem) {\r\n        super.internalUpdateItem(item);\r\n        this.setState({value: item.getCurrentValue()} );\r\n    }\r\n\r\n    editingRequested() {\r\n        this.editingStarted = true;\r\n        this.itemHasUpdated();\r\n    }\r\n\r\n    colorHasChanged(event: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({ value: event.currentTarget.value });\r\n    }\r\n\r\n    submitPressed() {\r\n        try {\r\n            this.editingStarted = false;\r\n            let item = this.props.controller.getTree().getMenuItemFor(this.props.itemId);\r\n            const correlation = this.props.controller.sendAbsoluteUpdate(this.props.itemId, formatStringToWire(item, this.state.value));\r\n            this.markRecentlyUpdated(correlation);\r\n        }\r\n        catch(e) {\r\n            alert(\"Problem submitting value: \" + e);\r\n            console.error(\"Problem during submit of value\");\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const colStyle = {\r\n            backgroundColor: this.state?.value,\r\n        };\r\n\r\n        if(this.editingStarted) {\r\n            return <div className=\"upDownControl colorControl\" style={colStyle}>\r\n                <button className=\"rightBtn\" onClick={this.submitPressed}>Submit</button>\r\n                <form>\r\n                    <label>\r\n                        Select color:\r\n                    </label>\r\n                    <input type=\"color\" value={this.state?.value} onChange={this.colorHasChanged}/>\r\n                </form>\r\n            </div>\r\n        } else {\r\n            return <div className={this.calculatedClass(\"upDownControl colorControl\")} style={colStyle}>\r\n                <button className=\"rightBtn\" onClick={this.editingRequested}>Change</button>\r\n                <div>{this.state?.value}</div>\r\n            </div>\r\n        }\r\n    }\r\n}","import {APIConnectionListener, APIConnector, APIMessageHandler} from \"../MenuController\";\r\nimport {PROTOCOL_TAG_VAL, TAG_END_OF_MSG, TAG_START_OF_MSG} from \"../protocol/TagValProtocol\";\r\n\r\nenum CurrentSocketState {\r\n    DISCONNECTED, CONNECTING, CONNECTED, STOPPED\r\n}\r\n\r\nexport class WebSocketConnector implements APIConnector {\r\n    url: string;\r\n    connectionListener: APIConnectionListener|undefined = undefined;\r\n    messageHandler: APIMessageHandler|undefined = undefined;\r\n    socket: WebSocket|undefined = undefined;\r\n    state: CurrentSocketState = CurrentSocketState.DISCONNECTED;\r\n    lastDisconnect: number = 0;\r\n    currentData: string = \"\";\r\n\r\n    constructor(url: string) {\r\n        this.url = url;\r\n    }\r\n\r\n    start(): void {\r\n        if(this.state === CurrentSocketState.CONNECTING)  return;\r\n        console.info(`Start connection to ${this.getName()}`);\r\n        this.state = CurrentSocketState.CONNECTING;\r\n        this.socket = new WebSocket(this.url);\r\n\r\n        this.socket.onclose = (evt) => {\r\n            console.info(`Connection reported onClose ${this.getName()}`);\r\n            if(this.connectionListener) this.connectionListener(false, evt.reason + \" - \" + evt.code);\r\n\r\n            this.lastDisconnect = Date.now();\r\n            this.state = CurrentSocketState.DISCONNECTED;\r\n            this.socket = undefined;\r\n            this.currentData = \"\";\r\n        }\r\n\r\n        this.socket.onopen = ev => {\r\n            console.info(`Connection reports onOpen ${this.getName()}`);\r\n            this.state = CurrentSocketState.CONNECTED;\r\n            if(this.connectionListener) this.connectionListener(true, \"\");\r\n        };\r\n\r\n        this.socket.onmessage = ev => {\r\n            this.currentData += ev.data;\r\n            let possibleMessage = this.getPossibleMessage(PROTOCOL_TAG_VAL);\r\n            while(possibleMessage && this.messageHandler) {\r\n                try {\r\n                    console.debug(`Message received on ${this.getName()} was ${possibleMessage}`);\r\n                    this.messageHandler(PROTOCOL_TAG_VAL, possibleMessage);\r\n                }\r\n                catch(e) {\r\n                    console.log(\"Unexpected error in message processing\");\r\n                    console.log(e);\r\n                }\r\n                possibleMessage = this.getPossibleMessage(PROTOCOL_TAG_VAL); // check if there's a tag val message\r\n            }\r\n        };\r\n    }\r\n\r\n    lastDisconnectTime(): number {\r\n        return this.lastDisconnect;\r\n    }\r\n\r\n    getPossibleMessage(protocol: number): string|undefined {\r\n        if (this.state !== CurrentSocketState.CONNECTED || !this.currentData) return undefined;\r\n        let position = 0;\r\n\r\n        while(position < this.currentData.length && this.currentData.charCodeAt(position) !== TAG_START_OF_MSG) position++;\r\n        position++; // skip message start\r\n        if(position >= this.currentData.length || this.currentData.charCodeAt(position) !== protocol) return undefined;\r\n        let msgStart = position + 1;\r\n        while(position < this.currentData.length && this.currentData.charCodeAt(position) !== TAG_END_OF_MSG) position++;\r\n        if(this.currentData.charCodeAt(position) !== TAG_END_OF_MSG) return undefined;\r\n        let retVal = this.currentData.substring(msgStart, position);\r\n        this.currentData = this.currentData.substring(position + 1);\r\n        return retVal;\r\n    }\r\n\r\n    stop(): void {\r\n        this.state = CurrentSocketState.STOPPED;\r\n        this.socket?.close();\r\n    }\r\n\r\n    closeConnection(): void {\r\n        console.info(`closeConnection on ${this.getName()}`);\r\n        this.state = CurrentSocketState.DISCONNECTED;\r\n        this.socket?.close();\r\n    }\r\n\r\n    getName(): string {\r\n        return `WebSocket(${this.url})`;\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return this.socket?.readyState === WebSocket.OPEN;\r\n    }\r\n\r\n    registerConnectionListener(connectionListener: APIConnectionListener): void {\r\n        this.connectionListener = connectionListener;\r\n        connectionListener(this.socket?.readyState ===  WebSocket.OPEN, \"\");\r\n    }\r\n\r\n    registerMessageHandler(messageHandler: APIMessageHandler): void {\r\n        this.messageHandler = messageHandler;\r\n    }\r\n\r\n    sendMessage(rawMessage: string): void {\r\n        this.socket?.send(rawMessage);\r\n    }\r\n}","import {AppInfo, MenuController} from \"./api/MenuController\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, {Component, FormEvent} from \"react\";\r\n\r\nexport class GlobalAppSettings implements AppInfo {\r\n    private uuid: string = uuidv4();\r\n    private appName: string = \"Untitled\";\r\n    private webSocketExtension: string = \"\";\r\n\r\n    constructor() {\r\n        if(doesCookieExist(\"settings_appName\") && doesCookieExist(\"settings_appUUID\")) {\r\n            this.appName = getCookieOrDefault(\"settings_appName\") ?? \"Undefined\";\r\n            this.uuid = getCookieOrDefault(\"settings_appUUID\") ?? \"Undefined\";\r\n            this.webSocketExtension = getCookieOrDefault(\"settings_webSocketExt\") ?? \"\";\r\n        } else {\r\n            // we must save out the UUID on first run because otherwise we'd get a new one every time around\r\n            // and if authentication is enabled on device, we'd not be able to connect without pairing each time.\r\n            setCookie(\"settings_appUUID\", this.uuid);\r\n            setCookie(\"settings_appName\", \"Untitled\");\r\n        }\r\n    }\r\n\r\n    getAppName(): string {\r\n        return this.appName;\r\n    }\r\n\r\n    getAppUuid(): string {\r\n        return this.uuid;\r\n    }\r\n\r\n    getWebSocketExtension(): string {\r\n        return this.webSocketExtension;\r\n    }\r\n\r\n    setAppName(appName: string): void {\r\n        this.appName = appName;\r\n        setCookie(\"settings_appName\", appName);\r\n    }\r\n\r\n    setAppUuid(appUuid: string): void {\r\n        this.uuid = appUuid;\r\n        setCookie(\"settings_appUUID\", appUuid);\r\n    }\r\n\r\n    setWebSocketExtension(wsExtension: string) {\r\n        this.webSocketExtension = wsExtension;\r\n        setCookie(\"settings_webSocketExt\", wsExtension);\r\n    }\r\n}\r\n\r\nexport class GlobalSettingsPanel extends Component<{settings: GlobalAppSettings, controller: MenuController}, string> {\r\n    constructor(props: {settings: GlobalAppSettings, controller: MenuController}) {\r\n        super(props);\r\n        this.appNameHasChanged = this.appNameHasChanged.bind(this);\r\n        this.appUuidHasChanged = this.appUuidHasChanged.bind(this);\r\n        this.webSocketHasChanged = this.webSocketHasChanged.bind(this);\r\n        this.formSubmitPrevention = this.formSubmitPrevention.bind(this);\r\n    }\r\n\r\n    public appNameHasChanged(event: React.FormEvent<HTMLInputElement>) {\r\n        this.props.settings.setAppName(event.currentTarget.value);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public appUuidHasChanged() {\r\n        this.props.settings.setAppUuid(uuidv4());\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public webSocketHasChanged(event: React.FormEvent<HTMLInputElement>) {\r\n        this.props.settings.setWebSocketExtension(event.currentTarget.value);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public formSubmitPrevention(e: FormEvent) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    public render() {\r\n        return <div>\r\n            <h1>Global Settings</h1>\r\n            <form className=\"settingsForm\" onSubmit={this.formSubmitPrevention}>\r\n                <label htmlFor=\"appNameField\">App Name</label>\r\n                <span><input id=\"appNameField=\" name=\"appName\" onChange={this.appNameHasChanged} value={this.props.settings.getAppName()}/></span>\r\n                <label htmlFor=\"appUuidField\">App UUID</label>\r\n                <button onClick={this.appUuidHasChanged}>\r\n                    <i className=\"fa fa-refresh\"/>\r\n                </button>\r\n                <span><input type=\"text\" id=\"appUuidField\" readOnly name=\"appUuid\" value={this.props.settings.getAppUuid()}/></span>\r\n                <h2>Advanced / Dev settings</h2>\r\n                <label htmlFor=\"websocketAddressField\">Web Socket</label>\r\n                <span><input id=\"websocketAddressField\" name=\"webSockField\" onChange={this.webSocketHasChanged} value={this.props.settings.getWebSocketExtension()}/></span>\r\n            </form>\r\n            <p>{process.env.REACT_APP_NAME} Version {process.env.REACT_APP_VERSION}</p>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport function setCookie(key: string, value: string) {\r\n    const expires = new Date();\r\n    expires.setTime(expires.getTime() + (365 * 24 * 60 * 60 * 1000));\r\n    document.cookie = key + '=' + value + ';path=/;expires=' + expires.toUTCString();\r\n}\r\n\r\nexport function getCookieOrDefault(name: string, def: string|undefined = undefined) : string|undefined {\r\n    const nameLenPlus = (name.length + 1);\r\n    return document.cookie\r\n        .split(';')\r\n        .map(c => c.trim())\r\n        .filter(cookie => { return cookie.substring(0, nameLenPlus) === `${name}=`; })\r\n        .map(cookie => { return decodeURIComponent(cookie.substring(nameLenPlus)); })[0] || def;\r\n}\r\n\r\nexport function doesCookieExist(name: string) {\r\n    return getCookieOrDefault(name) !== undefined;\r\n}\r\n","import React, {Component} from 'react';\r\nimport logo from './img/large_icon.png';\r\nimport './App.css';\r\nimport {MenuController} from \"./api/MenuController\";\r\nimport {RootSubMenuUI} from \"./MenuUI\"\r\nimport {WebSocketConnector} from \"./api/remote/WebSocketConnector\";\r\nimport {ButtonType} from \"./api/protocol/TagValEnums\";\r\nimport {GlobalAppSettings, GlobalSettingsPanel} from \"./GlobalSettings\";\r\n\r\nclass App extends Component<any, {settingsActive: boolean}> {\r\n  private static globalSettings: GlobalAppSettings = new GlobalAppSettings();\r\n  private static globalController: MenuController;\r\n  private static globalSocket: WebSocketConnector\r\n  private static hasStartedYet = false;\r\n\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {settingsActive: false};\r\n    this.settingsButtonWasPressed = this.settingsButtonWasPressed.bind(this);\r\n\r\n    try {\r\n      if (!App.hasStartedYet) {\r\n        App.hasStartedYet = true;\r\n        let customUrl = App.globalSettings.getWebSocketExtension();\r\n        App.globalSocket = new WebSocketConnector(customUrl.length ? customUrl : \"ws://\" + window.location.host + \"/ws\");\r\n        App.globalController = new MenuController(App.globalSocket, App.globalSettings);\r\n        App.globalController.start();\r\n      }\r\n    } catch (err) {\r\n      if (err instanceof Error) console.log(err.message);\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  settingsButtonWasPressed() {\r\n    const st = !this.state.settingsActive;\r\n    this.setState({settingsActive: st});\r\n  }\r\n\r\n  render() {\r\n    if(this.state && this.state.settingsActive) {\r\n      return  <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <button onClick={this.settingsButtonWasPressed} className=\"settingsButton\"><i className=\"fa fa-close\"/> </button>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n          <p>\r\n            App Settings\r\n          </p>\r\n        </header>\r\n        <GlobalSettingsPanel settings={App.globalSettings} controller={App.globalController}/>\r\n      </div>\r\n\r\n    } \r\n    return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <button onClick={this.settingsButtonWasPressed} className=\"settingsButton\"><i className=\"fa fa-cog\"/></button>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n            <p>\r\n              {App.globalSettings.getAppName()}\r\n            </p>\r\n          </header>\r\n          <DialogItemUI controller={App.globalController}/>\r\n          <RootSubMenuUI itemId=\"0\" controller={App.globalController}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface DialogState {\r\n  shown: boolean;\r\n  title: string;\r\n  content: string;\r\n  button1: ButtonType;\r\n  button2: ButtonType;\r\n}\r\n\r\nclass DialogItemUI extends Component<{ controller: MenuController}, DialogState> {\r\n\r\n  constructor(props: {controller: MenuController}) {\r\n    super(props);\r\n    props.controller.registerDialogListener((shown: boolean, title: string, content: string, btn1: ButtonType, btn2: ButtonType) => {\r\n      this.setState({title: title, content: content, button1: btn1, button2: btn2, shown: shown});\r\n    });\r\n    this.button1Clicked = this.button1Clicked.bind(this);\r\n    this.button2Clicked = this.button2Clicked.bind(this);\r\n  }\r\n\r\n  textFromBtnType(btn: ButtonType) {\r\n    switch(btn) {\r\n      case ButtonType.ACCEPT: return \"Accept\";\r\n      case ButtonType.CANCEL: return \"Cancel\";\r\n      case ButtonType.OK: return \"OK\";\r\n      case ButtonType.CLOSE: return \"Close\";\r\n      default: return \"\";\r\n    }\r\n  }\r\n\r\n  button1Clicked() {\r\n    this.props.controller.sendDialogAction(this.state.button1);\r\n  }\r\n\r\n  button2Clicked() {\r\n    this.props.controller.sendDialogAction(this.state.button2);\r\n  }\r\n\r\n  render() {\r\n    const dialogClasses = this.state?.shown ? \"dialogShown\" : \"dialogHidden\"\r\n    if (!this.state) return <div/>\r\n\r\n    return <div className={dialogClasses}>\r\n      <h1>{this.state.title}</h1>\r\n      <h3>{this.state.content}</h3>\r\n      <div>\r\n        <button onClick={this.button1Clicked}>{this.textFromBtnType(this.state.button1)}</button>\r\n        <button onClick={this.button2Clicked}>{this.textFromBtnType(this.state.button2)}</button>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}